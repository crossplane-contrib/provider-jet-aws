// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTargetObservation) DeepCopyInto(out *CatalogTargetObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTargetObservation.
func (in *CatalogTargetObservation) DeepCopy() *CatalogTargetObservation {
	if in == nil {
		return nil
	}
	out := new(CatalogTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTargetParameters) DeepCopyInto(out *CatalogTargetParameters) {
	*out = *in
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTargetParameters.
func (in *CatalogTargetParameters) DeepCopy() *CatalogTargetParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamodbTargetObservation) DeepCopyInto(out *DynamodbTargetObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamodbTargetObservation.
func (in *DynamodbTargetObservation) DeepCopy() *DynamodbTargetObservation {
	if in == nil {
		return nil
	}
	out := new(DynamodbTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamodbTargetParameters) DeepCopyInto(out *DynamodbTargetParameters) {
	*out = *in
	if in.ScanAll != nil {
		in, out := &in.ScanAll, &out.ScanAll
		*out = new(bool)
		**out = **in
	}
	if in.ScanRate != nil {
		in, out := &in.ScanRate, &out.ScanRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamodbTargetParameters.
func (in *DynamodbTargetParameters) DeepCopy() *DynamodbTargetParameters {
	if in == nil {
		return nil
	}
	out := new(DynamodbTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCrawler) DeepCopyInto(out *GlueCrawler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCrawler.
func (in *GlueCrawler) DeepCopy() *GlueCrawler {
	if in == nil {
		return nil
	}
	out := new(GlueCrawler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlueCrawler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCrawlerList) DeepCopyInto(out *GlueCrawlerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlueCrawler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCrawlerList.
func (in *GlueCrawlerList) DeepCopy() *GlueCrawlerList {
	if in == nil {
		return nil
	}
	out := new(GlueCrawlerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlueCrawlerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCrawlerObservation) DeepCopyInto(out *GlueCrawlerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCrawlerObservation.
func (in *GlueCrawlerObservation) DeepCopy() *GlueCrawlerObservation {
	if in == nil {
		return nil
	}
	out := new(GlueCrawlerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCrawlerParameters) DeepCopyInto(out *GlueCrawlerParameters) {
	*out = *in
	if in.CatalogTarget != nil {
		in, out := &in.CatalogTarget, &out.CatalogTarget
		*out = make([]CatalogTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Classifiers != nil {
		in, out := &in.Classifiers, &out.Classifiers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DynamodbTarget != nil {
		in, out := &in.DynamodbTarget, &out.DynamodbTarget
		*out = make([]DynamodbTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JdbcTarget != nil {
		in, out := &in.JdbcTarget, &out.JdbcTarget
		*out = make([]JdbcTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LineageConfiguration != nil {
		in, out := &in.LineageConfiguration, &out.LineageConfiguration
		*out = make([]LineageConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongodbTarget != nil {
		in, out := &in.MongodbTarget, &out.MongodbTarget
		*out = make([]MongodbTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecrawlPolicy != nil {
		in, out := &in.RecrawlPolicy, &out.RecrawlPolicy
		*out = make([]RecrawlPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3Target != nil {
		in, out := &in.S3Target, &out.S3Target
		*out = make([]S3TargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.SchemaChangePolicy != nil {
		in, out := &in.SchemaChangePolicy, &out.SchemaChangePolicy
		*out = make([]SchemaChangePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.TablePrefix != nil {
		in, out := &in.TablePrefix, &out.TablePrefix
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCrawlerParameters.
func (in *GlueCrawlerParameters) DeepCopy() *GlueCrawlerParameters {
	if in == nil {
		return nil
	}
	out := new(GlueCrawlerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCrawlerSpec) DeepCopyInto(out *GlueCrawlerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCrawlerSpec.
func (in *GlueCrawlerSpec) DeepCopy() *GlueCrawlerSpec {
	if in == nil {
		return nil
	}
	out := new(GlueCrawlerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCrawlerStatus) DeepCopyInto(out *GlueCrawlerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCrawlerStatus.
func (in *GlueCrawlerStatus) DeepCopy() *GlueCrawlerStatus {
	if in == nil {
		return nil
	}
	out := new(GlueCrawlerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JdbcTargetObservation) DeepCopyInto(out *JdbcTargetObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JdbcTargetObservation.
func (in *JdbcTargetObservation) DeepCopy() *JdbcTargetObservation {
	if in == nil {
		return nil
	}
	out := new(JdbcTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JdbcTargetParameters) DeepCopyInto(out *JdbcTargetParameters) {
	*out = *in
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JdbcTargetParameters.
func (in *JdbcTargetParameters) DeepCopy() *JdbcTargetParameters {
	if in == nil {
		return nil
	}
	out := new(JdbcTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LineageConfigurationObservation) DeepCopyInto(out *LineageConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LineageConfigurationObservation.
func (in *LineageConfigurationObservation) DeepCopy() *LineageConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(LineageConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LineageConfigurationParameters) DeepCopyInto(out *LineageConfigurationParameters) {
	*out = *in
	if in.CrawlerLineageSettings != nil {
		in, out := &in.CrawlerLineageSettings, &out.CrawlerLineageSettings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LineageConfigurationParameters.
func (in *LineageConfigurationParameters) DeepCopy() *LineageConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(LineageConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongodbTargetObservation) DeepCopyInto(out *MongodbTargetObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongodbTargetObservation.
func (in *MongodbTargetObservation) DeepCopy() *MongodbTargetObservation {
	if in == nil {
		return nil
	}
	out := new(MongodbTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongodbTargetParameters) DeepCopyInto(out *MongodbTargetParameters) {
	*out = *in
	if in.ScanAll != nil {
		in, out := &in.ScanAll, &out.ScanAll
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongodbTargetParameters.
func (in *MongodbTargetParameters) DeepCopy() *MongodbTargetParameters {
	if in == nil {
		return nil
	}
	out := new(MongodbTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecrawlPolicyObservation) DeepCopyInto(out *RecrawlPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecrawlPolicyObservation.
func (in *RecrawlPolicyObservation) DeepCopy() *RecrawlPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RecrawlPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecrawlPolicyParameters) DeepCopyInto(out *RecrawlPolicyParameters) {
	*out = *in
	if in.RecrawlBehavior != nil {
		in, out := &in.RecrawlBehavior, &out.RecrawlBehavior
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecrawlPolicyParameters.
func (in *RecrawlPolicyParameters) DeepCopy() *RecrawlPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RecrawlPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3TargetObservation) DeepCopyInto(out *S3TargetObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3TargetObservation.
func (in *S3TargetObservation) DeepCopy() *S3TargetObservation {
	if in == nil {
		return nil
	}
	out := new(S3TargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3TargetParameters) DeepCopyInto(out *S3TargetParameters) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SampleSize != nil {
		in, out := &in.SampleSize, &out.SampleSize
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3TargetParameters.
func (in *S3TargetParameters) DeepCopy() *S3TargetParameters {
	if in == nil {
		return nil
	}
	out := new(S3TargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaChangePolicyObservation) DeepCopyInto(out *SchemaChangePolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaChangePolicyObservation.
func (in *SchemaChangePolicyObservation) DeepCopy() *SchemaChangePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaChangePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaChangePolicyParameters) DeepCopyInto(out *SchemaChangePolicyParameters) {
	*out = *in
	if in.DeleteBehavior != nil {
		in, out := &in.DeleteBehavior, &out.DeleteBehavior
		*out = new(string)
		**out = **in
	}
	if in.UpdateBehavior != nil {
		in, out := &in.UpdateBehavior, &out.UpdateBehavior
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaChangePolicyParameters.
func (in *SchemaChangePolicyParameters) DeepCopy() *SchemaChangePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaChangePolicyParameters)
	in.DeepCopyInto(out)
	return out
}
