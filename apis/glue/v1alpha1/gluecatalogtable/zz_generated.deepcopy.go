// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnsObservation) DeepCopyInto(out *ColumnsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnsObservation.
func (in *ColumnsObservation) DeepCopy() *ColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnsParameters) DeepCopyInto(out *ColumnsParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnsParameters.
func (in *ColumnsParameters) DeepCopy() *ColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCatalogTable) DeepCopyInto(out *GlueCatalogTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCatalogTable.
func (in *GlueCatalogTable) DeepCopy() *GlueCatalogTable {
	if in == nil {
		return nil
	}
	out := new(GlueCatalogTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlueCatalogTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCatalogTableList) DeepCopyInto(out *GlueCatalogTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlueCatalogTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCatalogTableList.
func (in *GlueCatalogTableList) DeepCopy() *GlueCatalogTableList {
	if in == nil {
		return nil
	}
	out := new(GlueCatalogTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlueCatalogTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCatalogTableObservation) DeepCopyInto(out *GlueCatalogTableObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCatalogTableObservation.
func (in *GlueCatalogTableObservation) DeepCopy() *GlueCatalogTableObservation {
	if in == nil {
		return nil
	}
	out := new(GlueCatalogTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCatalogTableParameters) DeepCopyInto(out *GlueCatalogTableParameters) {
	*out = *in
	if in.CatalogId != nil {
		in, out := &in.CatalogId, &out.CatalogId
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PartitionIndex != nil {
		in, out := &in.PartitionIndex, &out.PartitionIndex
		*out = make([]PartitionIndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKeys != nil {
		in, out := &in.PartitionKeys, &out.PartitionKeys
		*out = make([]PartitionKeysParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(int64)
		**out = **in
	}
	if in.StorageDescriptor != nil {
		in, out := &in.StorageDescriptor, &out.StorageDescriptor
		*out = make([]StorageDescriptorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.TargetTable != nil {
		in, out := &in.TargetTable, &out.TargetTable
		*out = make([]TargetTableParameters, len(*in))
		copy(*out, *in)
	}
	if in.ViewExpandedText != nil {
		in, out := &in.ViewExpandedText, &out.ViewExpandedText
		*out = new(string)
		**out = **in
	}
	if in.ViewOriginalText != nil {
		in, out := &in.ViewOriginalText, &out.ViewOriginalText
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCatalogTableParameters.
func (in *GlueCatalogTableParameters) DeepCopy() *GlueCatalogTableParameters {
	if in == nil {
		return nil
	}
	out := new(GlueCatalogTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCatalogTableSpec) DeepCopyInto(out *GlueCatalogTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCatalogTableSpec.
func (in *GlueCatalogTableSpec) DeepCopy() *GlueCatalogTableSpec {
	if in == nil {
		return nil
	}
	out := new(GlueCatalogTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlueCatalogTableStatus) DeepCopyInto(out *GlueCatalogTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlueCatalogTableStatus.
func (in *GlueCatalogTableStatus) DeepCopy() *GlueCatalogTableStatus {
	if in == nil {
		return nil
	}
	out := new(GlueCatalogTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionIndexObservation) DeepCopyInto(out *PartitionIndexObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionIndexObservation.
func (in *PartitionIndexObservation) DeepCopy() *PartitionIndexObservation {
	if in == nil {
		return nil
	}
	out := new(PartitionIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionIndexParameters) DeepCopyInto(out *PartitionIndexParameters) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionIndexParameters.
func (in *PartitionIndexParameters) DeepCopy() *PartitionIndexParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionKeysObservation) DeepCopyInto(out *PartitionKeysObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionKeysObservation.
func (in *PartitionKeysObservation) DeepCopy() *PartitionKeysObservation {
	if in == nil {
		return nil
	}
	out := new(PartitionKeysObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionKeysParameters) DeepCopyInto(out *PartitionKeysParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionKeysParameters.
func (in *PartitionKeysParameters) DeepCopy() *PartitionKeysParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionKeysParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaIdObservation) DeepCopyInto(out *SchemaIdObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaIdObservation.
func (in *SchemaIdObservation) DeepCopy() *SchemaIdObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaIdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaIdParameters) DeepCopyInto(out *SchemaIdParameters) {
	*out = *in
	if in.RegistryName != nil {
		in, out := &in.RegistryName, &out.RegistryName
		*out = new(string)
		**out = **in
	}
	if in.SchemaArn != nil {
		in, out := &in.SchemaArn, &out.SchemaArn
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaIdParameters.
func (in *SchemaIdParameters) DeepCopy() *SchemaIdParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaIdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaReferenceObservation) DeepCopyInto(out *SchemaReferenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaReferenceObservation.
func (in *SchemaReferenceObservation) DeepCopy() *SchemaReferenceObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaReferenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaReferenceParameters) DeepCopyInto(out *SchemaReferenceParameters) {
	*out = *in
	if in.SchemaId != nil {
		in, out := &in.SchemaId, &out.SchemaId
		*out = make([]SchemaIdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaVersionId != nil {
		in, out := &in.SchemaVersionId, &out.SchemaVersionId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaReferenceParameters.
func (in *SchemaReferenceParameters) DeepCopy() *SchemaReferenceParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaReferenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerDeInfoObservation) DeepCopyInto(out *SerDeInfoObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerDeInfoObservation.
func (in *SerDeInfoObservation) DeepCopy() *SerDeInfoObservation {
	if in == nil {
		return nil
	}
	out := new(SerDeInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerDeInfoParameters) DeepCopyInto(out *SerDeInfoParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SerializationLibrary != nil {
		in, out := &in.SerializationLibrary, &out.SerializationLibrary
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerDeInfoParameters.
func (in *SerDeInfoParameters) DeepCopy() *SerDeInfoParameters {
	if in == nil {
		return nil
	}
	out := new(SerDeInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkewedInfoObservation) DeepCopyInto(out *SkewedInfoObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkewedInfoObservation.
func (in *SkewedInfoObservation) DeepCopy() *SkewedInfoObservation {
	if in == nil {
		return nil
	}
	out := new(SkewedInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkewedInfoParameters) DeepCopyInto(out *SkewedInfoParameters) {
	*out = *in
	if in.SkewedColumnNames != nil {
		in, out := &in.SkewedColumnNames, &out.SkewedColumnNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SkewedColumnValueLocationMaps != nil {
		in, out := &in.SkewedColumnValueLocationMaps, &out.SkewedColumnValueLocationMaps
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SkewedColumnValues != nil {
		in, out := &in.SkewedColumnValues, &out.SkewedColumnValues
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkewedInfoParameters.
func (in *SkewedInfoParameters) DeepCopy() *SkewedInfoParameters {
	if in == nil {
		return nil
	}
	out := new(SkewedInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SortColumnsObservation) DeepCopyInto(out *SortColumnsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SortColumnsObservation.
func (in *SortColumnsObservation) DeepCopy() *SortColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(SortColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SortColumnsParameters) DeepCopyInto(out *SortColumnsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SortColumnsParameters.
func (in *SortColumnsParameters) DeepCopy() *SortColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(SortColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageDescriptorObservation) DeepCopyInto(out *StorageDescriptorObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageDescriptorObservation.
func (in *StorageDescriptorObservation) DeepCopy() *StorageDescriptorObservation {
	if in == nil {
		return nil
	}
	out := new(StorageDescriptorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageDescriptorParameters) DeepCopyInto(out *StorageDescriptorParameters) {
	*out = *in
	if in.BucketColumns != nil {
		in, out := &in.BucketColumns, &out.BucketColumns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]ColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Compressed != nil {
		in, out := &in.Compressed, &out.Compressed
		*out = new(bool)
		**out = **in
	}
	if in.InputFormat != nil {
		in, out := &in.InputFormat, &out.InputFormat
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NumberOfBuckets != nil {
		in, out := &in.NumberOfBuckets, &out.NumberOfBuckets
		*out = new(int64)
		**out = **in
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SchemaReference != nil {
		in, out := &in.SchemaReference, &out.SchemaReference
		*out = make([]SchemaReferenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SerDeInfo != nil {
		in, out := &in.SerDeInfo, &out.SerDeInfo
		*out = make([]SerDeInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkewedInfo != nil {
		in, out := &in.SkewedInfo, &out.SkewedInfo
		*out = make([]SkewedInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SortColumns != nil {
		in, out := &in.SortColumns, &out.SortColumns
		*out = make([]SortColumnsParameters, len(*in))
		copy(*out, *in)
	}
	if in.StoredAsSubDirectories != nil {
		in, out := &in.StoredAsSubDirectories, &out.StoredAsSubDirectories
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageDescriptorParameters.
func (in *StorageDescriptorParameters) DeepCopy() *StorageDescriptorParameters {
	if in == nil {
		return nil
	}
	out := new(StorageDescriptorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetTableObservation) DeepCopyInto(out *TargetTableObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetTableObservation.
func (in *TargetTableObservation) DeepCopy() *TargetTableObservation {
	if in == nil {
		return nil
	}
	out := new(TargetTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetTableParameters) DeepCopyInto(out *TargetTableParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetTableParameters.
func (in *TargetTableParameters) DeepCopy() *TargetTableParameters {
	if in == nil {
		return nil
	}
	out := new(TargetTableParameters)
	in.DeepCopyInto(out)
	return out
}
