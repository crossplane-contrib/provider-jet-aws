/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=iot.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/iot/v1alpha1"
)

type IotThingPrincipalAttachmentObservation struct {
}

type IotThingPrincipalAttachmentParameters struct {
	Principal string `json:"principal" tf:"principal"`

	Thing string `json:"thing" tf:"thing"`
}

// IotThingPrincipalAttachmentSpec defines the desired state of IotThingPrincipalAttachment
type IotThingPrincipalAttachmentSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       IotThingPrincipalAttachmentParameters `json:"forProvider"`
}

// IotThingPrincipalAttachmentStatus defines the observed state of IotThingPrincipalAttachment.
type IotThingPrincipalAttachmentStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          IotThingPrincipalAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// IotThingPrincipalAttachment is the Schema for the IotThingPrincipalAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type IotThingPrincipalAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IotThingPrincipalAttachmentSpec   `json:"spec"`
	Status            IotThingPrincipalAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IotThingPrincipalAttachmentList contains a list of IotThingPrincipalAttachments
type IotThingPrincipalAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []IotThingPrincipalAttachment `json:"items"`
}

// Repository type metadata.
var (
	IotThingPrincipalAttachmentKind             = "IotThingPrincipalAttachment"
	IotThingPrincipalAttachmentGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: IotThingPrincipalAttachmentKind}.String()
	IotThingPrincipalAttachmentKindAPIVersion   = IotThingPrincipalAttachmentKind + "." + v1alpha1.GroupVersion.String()
	IotThingPrincipalAttachmentGroupVersionKind = v1alpha1.GroupVersion.WithKind(IotThingPrincipalAttachmentKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&IotThingPrincipalAttachment{}, &IotThingPrincipalAttachmentList{})
}
