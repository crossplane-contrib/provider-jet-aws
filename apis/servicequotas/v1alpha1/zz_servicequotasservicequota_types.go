/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ServicequotasServiceQuotaObservation struct {
	ARN string `json:"arn" tf:"arn"`

	Adjustable bool `json:"adjustable" tf:"adjustable"`

	DefaultValue float64 `json:"defaultValue" tf:"default_value"`

	QuotaName string `json:"quotaName" tf:"quota_name"`

	RequestID string `json:"requestID" tf:"request_id"`

	RequestStatus string `json:"requestStatus" tf:"request_status"`

	ServiceName string `json:"serviceName" tf:"service_name"`
}

type ServicequotasServiceQuotaParameters struct {
	QuotaCode string `json:"quotaCode" tf:"quota_code"`

	ServiceCode string `json:"serviceCode" tf:"service_code"`

	Value float64 `json:"value" tf:"value"`
}

// ServicequotasServiceQuotaSpec defines the desired state of ServicequotasServiceQuota
type ServicequotasServiceQuotaSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ServicequotasServiceQuotaParameters `json:"forProvider"`
}

// ServicequotasServiceQuotaStatus defines the observed state of ServicequotasServiceQuota.
type ServicequotasServiceQuotaStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ServicequotasServiceQuotaObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ServicequotasServiceQuota is the Schema for the ServicequotasServiceQuotas API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type ServicequotasServiceQuota struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServicequotasServiceQuotaSpec   `json:"spec"`
	Status            ServicequotasServiceQuotaStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServicequotasServiceQuotaList contains a list of ServicequotasServiceQuotas
type ServicequotasServiceQuotaList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServicequotasServiceQuota `json:"items"`
}

// Repository type metadata.
var (
	ServicequotasServiceQuotaKind             = "ServicequotasServiceQuota"
	ServicequotasServiceQuotaGroupKind        = schema.GroupKind{Group: Group, Kind: ServicequotasServiceQuotaKind}.String()
	ServicequotasServiceQuotaKindAPIVersion   = ServicequotasServiceQuotaKind + "." + GroupVersion.String()
	ServicequotasServiceQuotaGroupVersionKind = GroupVersion.WithKind(ServicequotasServiceQuotaKind)
)

func init() {
	SchemeBuilder.Register(&ServicequotasServiceQuota{}, &ServicequotasServiceQuotaList{})
}
