// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cache) DeepCopyInto(out *Cache) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cache.
func (in *Cache) DeepCopy() *Cache {
	if in == nil {
		return nil
	}
	out := new(Cache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cache) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAttributesObservation) DeepCopyInto(out *CacheAttributesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAttributesObservation.
func (in *CacheAttributesObservation) DeepCopy() *CacheAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(CacheAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAttributesParameters) DeepCopyInto(out *CacheAttributesParameters) {
	*out = *in
	if in.CacheStaleTimeoutInSeconds != nil {
		in, out := &in.CacheStaleTimeoutInSeconds, &out.CacheStaleTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAttributesParameters.
func (in *CacheAttributesParameters) DeepCopy() *CacheAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(CacheAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheList) DeepCopyInto(out *CacheList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cache, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheList.
func (in *CacheList) DeepCopy() *CacheList {
	if in == nil {
		return nil
	}
	out := new(CacheList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheObservation) DeepCopyInto(out *CacheObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheObservation.
func (in *CacheObservation) DeepCopy() *CacheObservation {
	if in == nil {
		return nil
	}
	out := new(CacheObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheParameters) DeepCopyInto(out *CacheParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(string)
		**out = **in
	}
	if in.GatewayArn != nil {
		in, out := &in.GatewayArn, &out.GatewayArn
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheParameters.
func (in *CacheParameters) DeepCopy() *CacheParameters {
	if in == nil {
		return nil
	}
	out := new(CacheParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSpec) DeepCopyInto(out *CacheSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSpec.
func (in *CacheSpec) DeepCopy() *CacheSpec {
	if in == nil {
		return nil
	}
	out := new(CacheSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheStatus) DeepCopyInto(out *CacheStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheStatus.
func (in *CacheStatus) DeepCopy() *CacheStatus {
	if in == nil {
		return nil
	}
	out := new(CacheStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedIscsiVolume) DeepCopyInto(out *CachedIscsiVolume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedIscsiVolume.
func (in *CachedIscsiVolume) DeepCopy() *CachedIscsiVolume {
	if in == nil {
		return nil
	}
	out := new(CachedIscsiVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CachedIscsiVolume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedIscsiVolumeList) DeepCopyInto(out *CachedIscsiVolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CachedIscsiVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedIscsiVolumeList.
func (in *CachedIscsiVolumeList) DeepCopy() *CachedIscsiVolumeList {
	if in == nil {
		return nil
	}
	out := new(CachedIscsiVolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CachedIscsiVolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedIscsiVolumeObservation) DeepCopyInto(out *CachedIscsiVolumeObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ChapEnabled != nil {
		in, out := &in.ChapEnabled, &out.ChapEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LunNumber != nil {
		in, out := &in.LunNumber, &out.LunNumber
		*out = new(int64)
		**out = **in
	}
	if in.NetworkInterfacePort != nil {
		in, out := &in.NetworkInterfacePort, &out.NetworkInterfacePort
		*out = new(int64)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
	if in.VolumeArn != nil {
		in, out := &in.VolumeArn, &out.VolumeArn
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedIscsiVolumeObservation.
func (in *CachedIscsiVolumeObservation) DeepCopy() *CachedIscsiVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(CachedIscsiVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedIscsiVolumeParameters) DeepCopyInto(out *CachedIscsiVolumeParameters) {
	*out = *in
	if in.GatewayArn != nil {
		in, out := &in.GatewayArn, &out.GatewayArn
		*out = new(string)
		**out = **in
	}
	if in.KmsEncrypted != nil {
		in, out := &in.KmsEncrypted, &out.KmsEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.KmsKey != nil {
		in, out := &in.KmsKey, &out.KmsKey
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.SourceVolumeArn != nil {
		in, out := &in.SourceVolumeArn, &out.SourceVolumeArn
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetName != nil {
		in, out := &in.TargetName, &out.TargetName
		*out = new(string)
		**out = **in
	}
	if in.VolumeSizeInBytes != nil {
		in, out := &in.VolumeSizeInBytes, &out.VolumeSizeInBytes
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedIscsiVolumeParameters.
func (in *CachedIscsiVolumeParameters) DeepCopy() *CachedIscsiVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(CachedIscsiVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedIscsiVolumeSpec) DeepCopyInto(out *CachedIscsiVolumeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedIscsiVolumeSpec.
func (in *CachedIscsiVolumeSpec) DeepCopy() *CachedIscsiVolumeSpec {
	if in == nil {
		return nil
	}
	out := new(CachedIscsiVolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedIscsiVolumeStatus) DeepCopyInto(out *CachedIscsiVolumeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedIscsiVolumeStatus.
func (in *CachedIscsiVolumeStatus) DeepCopy() *CachedIscsiVolumeStatus {
	if in == nil {
		return nil
	}
	out := new(CachedIscsiVolumeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemAssociation) DeepCopyInto(out *FileSystemAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemAssociation.
func (in *FileSystemAssociation) DeepCopy() *FileSystemAssociation {
	if in == nil {
		return nil
	}
	out := new(FileSystemAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FileSystemAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemAssociationList) DeepCopyInto(out *FileSystemAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FileSystemAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemAssociationList.
func (in *FileSystemAssociationList) DeepCopy() *FileSystemAssociationList {
	if in == nil {
		return nil
	}
	out := new(FileSystemAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FileSystemAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemAssociationObservation) DeepCopyInto(out *FileSystemAssociationObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemAssociationObservation.
func (in *FileSystemAssociationObservation) DeepCopy() *FileSystemAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(FileSystemAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemAssociationParameters) DeepCopyInto(out *FileSystemAssociationParameters) {
	*out = *in
	if in.AuditDestinationArn != nil {
		in, out := &in.AuditDestinationArn, &out.AuditDestinationArn
		*out = new(string)
		**out = **in
	}
	if in.CacheAttributes != nil {
		in, out := &in.CacheAttributes, &out.CacheAttributes
		*out = make([]CacheAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayArn != nil {
		in, out := &in.GatewayArn, &out.GatewayArn
		*out = new(string)
		**out = **in
	}
	if in.LocationArn != nil {
		in, out := &in.LocationArn, &out.LocationArn
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemAssociationParameters.
func (in *FileSystemAssociationParameters) DeepCopy() *FileSystemAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(FileSystemAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemAssociationSpec) DeepCopyInto(out *FileSystemAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemAssociationSpec.
func (in *FileSystemAssociationSpec) DeepCopy() *FileSystemAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(FileSystemAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemAssociationStatus) DeepCopyInto(out *FileSystemAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemAssociationStatus.
func (in *FileSystemAssociationStatus) DeepCopy() *FileSystemAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(FileSystemAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Gateway) DeepCopyInto(out *Gateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Gateway.
func (in *Gateway) DeepCopy() *Gateway {
	if in == nil {
		return nil
	}
	out := new(Gateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Gateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayList) DeepCopyInto(out *GatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Gateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayList.
func (in *GatewayList) DeepCopy() *GatewayList {
	if in == nil {
		return nil
	}
	out := new(GatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayNetworkInterfaceObservation) DeepCopyInto(out *GatewayNetworkInterfaceObservation) {
	*out = *in
	if in.IPv4Address != nil {
		in, out := &in.IPv4Address, &out.IPv4Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayNetworkInterfaceObservation.
func (in *GatewayNetworkInterfaceObservation) DeepCopy() *GatewayNetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(GatewayNetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayNetworkInterfaceParameters) DeepCopyInto(out *GatewayNetworkInterfaceParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayNetworkInterfaceParameters.
func (in *GatewayNetworkInterfaceParameters) DeepCopy() *GatewayNetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayNetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayObservation) DeepCopyInto(out *GatewayObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Ec2InstanceID != nil {
		in, out := &in.Ec2InstanceID, &out.Ec2InstanceID
		*out = new(string)
		**out = **in
	}
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayNetworkInterface != nil {
		in, out := &in.GatewayNetworkInterface, &out.GatewayNetworkInterface
		*out = make([]GatewayNetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostEnvironment != nil {
		in, out := &in.HostEnvironment, &out.HostEnvironment
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayObservation.
func (in *GatewayObservation) DeepCopy() *GatewayObservation {
	if in == nil {
		return nil
	}
	out := new(GatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayParameters) DeepCopyInto(out *GatewayParameters) {
	*out = *in
	if in.ActivationKey != nil {
		in, out := &in.ActivationKey, &out.ActivationKey
		*out = new(string)
		**out = **in
	}
	if in.AverageDownloadRateLimitInBitsPerSec != nil {
		in, out := &in.AverageDownloadRateLimitInBitsPerSec, &out.AverageDownloadRateLimitInBitsPerSec
		*out = new(int64)
		**out = **in
	}
	if in.AverageUploadRateLimitInBitsPerSec != nil {
		in, out := &in.AverageUploadRateLimitInBitsPerSec, &out.AverageUploadRateLimitInBitsPerSec
		*out = new(int64)
		**out = **in
	}
	if in.CloudwatchLogGroupArn != nil {
		in, out := &in.CloudwatchLogGroupArn, &out.CloudwatchLogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.GatewayIPAddress != nil {
		in, out := &in.GatewayIPAddress, &out.GatewayIPAddress
		*out = new(string)
		**out = **in
	}
	if in.GatewayName != nil {
		in, out := &in.GatewayName, &out.GatewayName
		*out = new(string)
		**out = **in
	}
	if in.GatewayTimezone != nil {
		in, out := &in.GatewayTimezone, &out.GatewayTimezone
		*out = new(string)
		**out = **in
	}
	if in.GatewayType != nil {
		in, out := &in.GatewayType, &out.GatewayType
		*out = new(string)
		**out = **in
	}
	if in.GatewayVpcEndpoint != nil {
		in, out := &in.GatewayVpcEndpoint, &out.GatewayVpcEndpoint
		*out = new(string)
		**out = **in
	}
	if in.MediumChangerType != nil {
		in, out := &in.MediumChangerType, &out.MediumChangerType
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SmbActiveDirectorySettings != nil {
		in, out := &in.SmbActiveDirectorySettings, &out.SmbActiveDirectorySettings
		*out = make([]SmbActiveDirectorySettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SmbFileShareVisibility != nil {
		in, out := &in.SmbFileShareVisibility, &out.SmbFileShareVisibility
		*out = new(bool)
		**out = **in
	}
	out.SmbGuestPasswordSecretRef = in.SmbGuestPasswordSecretRef
	if in.SmbSecurityStrategy != nil {
		in, out := &in.SmbSecurityStrategy, &out.SmbSecurityStrategy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TapeDriveType != nil {
		in, out := &in.TapeDriveType, &out.TapeDriveType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayParameters.
func (in *GatewayParameters) DeepCopy() *GatewayParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewaySpec) DeepCopyInto(out *GatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewaySpec.
func (in *GatewaySpec) DeepCopy() *GatewaySpec {
	if in == nil {
		return nil
	}
	out := new(GatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayStatus) DeepCopyInto(out *GatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayStatus.
func (in *GatewayStatus) DeepCopy() *GatewayStatus {
	if in == nil {
		return nil
	}
	out := new(GatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NfsFileShare) DeepCopyInto(out *NfsFileShare) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NfsFileShare.
func (in *NfsFileShare) DeepCopy() *NfsFileShare {
	if in == nil {
		return nil
	}
	out := new(NfsFileShare)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NfsFileShare) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NfsFileShareCacheAttributesObservation) DeepCopyInto(out *NfsFileShareCacheAttributesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NfsFileShareCacheAttributesObservation.
func (in *NfsFileShareCacheAttributesObservation) DeepCopy() *NfsFileShareCacheAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(NfsFileShareCacheAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NfsFileShareCacheAttributesParameters) DeepCopyInto(out *NfsFileShareCacheAttributesParameters) {
	*out = *in
	if in.CacheStaleTimeoutInSeconds != nil {
		in, out := &in.CacheStaleTimeoutInSeconds, &out.CacheStaleTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NfsFileShareCacheAttributesParameters.
func (in *NfsFileShareCacheAttributesParameters) DeepCopy() *NfsFileShareCacheAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(NfsFileShareCacheAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NfsFileShareDefaultsObservation) DeepCopyInto(out *NfsFileShareDefaultsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NfsFileShareDefaultsObservation.
func (in *NfsFileShareDefaultsObservation) DeepCopy() *NfsFileShareDefaultsObservation {
	if in == nil {
		return nil
	}
	out := new(NfsFileShareDefaultsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NfsFileShareDefaultsParameters) DeepCopyInto(out *NfsFileShareDefaultsParameters) {
	*out = *in
	if in.DirectoryMode != nil {
		in, out := &in.DirectoryMode, &out.DirectoryMode
		*out = new(string)
		**out = **in
	}
	if in.FileMode != nil {
		in, out := &in.FileMode, &out.FileMode
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NfsFileShareDefaultsParameters.
func (in *NfsFileShareDefaultsParameters) DeepCopy() *NfsFileShareDefaultsParameters {
	if in == nil {
		return nil
	}
	out := new(NfsFileShareDefaultsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NfsFileShareList) DeepCopyInto(out *NfsFileShareList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NfsFileShare, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NfsFileShareList.
func (in *NfsFileShareList) DeepCopy() *NfsFileShareList {
	if in == nil {
		return nil
	}
	out := new(NfsFileShareList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NfsFileShareList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NfsFileShareObservation) DeepCopyInto(out *NfsFileShareObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.FileshareID != nil {
		in, out := &in.FileshareID, &out.FileshareID
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NfsFileShareObservation.
func (in *NfsFileShareObservation) DeepCopy() *NfsFileShareObservation {
	if in == nil {
		return nil
	}
	out := new(NfsFileShareObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NfsFileShareParameters) DeepCopyInto(out *NfsFileShareParameters) {
	*out = *in
	if in.CacheAttributes != nil {
		in, out := &in.CacheAttributes, &out.CacheAttributes
		*out = make([]NfsFileShareCacheAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientList != nil {
		in, out := &in.ClientList, &out.ClientList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultStorageClass != nil {
		in, out := &in.DefaultStorageClass, &out.DefaultStorageClass
		*out = new(string)
		**out = **in
	}
	if in.FileShareName != nil {
		in, out := &in.FileShareName, &out.FileShareName
		*out = new(string)
		**out = **in
	}
	if in.GatewayArn != nil {
		in, out := &in.GatewayArn, &out.GatewayArn
		*out = new(string)
		**out = **in
	}
	if in.GuessMimeTypeEnabled != nil {
		in, out := &in.GuessMimeTypeEnabled, &out.GuessMimeTypeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KmsEncrypted != nil {
		in, out := &in.KmsEncrypted, &out.KmsEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.KmsKeyArn != nil {
		in, out := &in.KmsKeyArn, &out.KmsKeyArn
		*out = new(string)
		**out = **in
	}
	if in.LocationArn != nil {
		in, out := &in.LocationArn, &out.LocationArn
		*out = new(string)
		**out = **in
	}
	if in.NfsFileShareDefaults != nil {
		in, out := &in.NfsFileShareDefaults, &out.NfsFileShareDefaults
		*out = make([]NfsFileShareDefaultsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationPolicy != nil {
		in, out := &in.NotificationPolicy, &out.NotificationPolicy
		*out = new(string)
		**out = **in
	}
	if in.ObjectACL != nil {
		in, out := &in.ObjectACL, &out.ObjectACL
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RequesterPays != nil {
		in, out := &in.RequesterPays, &out.RequesterPays
		*out = new(bool)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Squash != nil {
		in, out := &in.Squash, &out.Squash
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NfsFileShareParameters.
func (in *NfsFileShareParameters) DeepCopy() *NfsFileShareParameters {
	if in == nil {
		return nil
	}
	out := new(NfsFileShareParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NfsFileShareSpec) DeepCopyInto(out *NfsFileShareSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NfsFileShareSpec.
func (in *NfsFileShareSpec) DeepCopy() *NfsFileShareSpec {
	if in == nil {
		return nil
	}
	out := new(NfsFileShareSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NfsFileShareStatus) DeepCopyInto(out *NfsFileShareStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NfsFileShareStatus.
func (in *NfsFileShareStatus) DeepCopy() *NfsFileShareStatus {
	if in == nil {
		return nil
	}
	out := new(NfsFileShareStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbActiveDirectorySettingsObservation) DeepCopyInto(out *SmbActiveDirectorySettingsObservation) {
	*out = *in
	if in.ActiveDirectoryStatus != nil {
		in, out := &in.ActiveDirectoryStatus, &out.ActiveDirectoryStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbActiveDirectorySettingsObservation.
func (in *SmbActiveDirectorySettingsObservation) DeepCopy() *SmbActiveDirectorySettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SmbActiveDirectorySettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbActiveDirectorySettingsParameters) DeepCopyInto(out *SmbActiveDirectorySettingsParameters) {
	*out = *in
	if in.DomainControllers != nil {
		in, out := &in.DomainControllers, &out.DomainControllers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnit != nil {
		in, out := &in.OrganizationalUnit, &out.OrganizationalUnit
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.TimeoutInSeconds != nil {
		in, out := &in.TimeoutInSeconds, &out.TimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbActiveDirectorySettingsParameters.
func (in *SmbActiveDirectorySettingsParameters) DeepCopy() *SmbActiveDirectorySettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SmbActiveDirectorySettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbFileShare) DeepCopyInto(out *SmbFileShare) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbFileShare.
func (in *SmbFileShare) DeepCopy() *SmbFileShare {
	if in == nil {
		return nil
	}
	out := new(SmbFileShare)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SmbFileShare) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbFileShareCacheAttributesObservation) DeepCopyInto(out *SmbFileShareCacheAttributesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbFileShareCacheAttributesObservation.
func (in *SmbFileShareCacheAttributesObservation) DeepCopy() *SmbFileShareCacheAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(SmbFileShareCacheAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbFileShareCacheAttributesParameters) DeepCopyInto(out *SmbFileShareCacheAttributesParameters) {
	*out = *in
	if in.CacheStaleTimeoutInSeconds != nil {
		in, out := &in.CacheStaleTimeoutInSeconds, &out.CacheStaleTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbFileShareCacheAttributesParameters.
func (in *SmbFileShareCacheAttributesParameters) DeepCopy() *SmbFileShareCacheAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(SmbFileShareCacheAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbFileShareList) DeepCopyInto(out *SmbFileShareList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SmbFileShare, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbFileShareList.
func (in *SmbFileShareList) DeepCopy() *SmbFileShareList {
	if in == nil {
		return nil
	}
	out := new(SmbFileShareList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SmbFileShareList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbFileShareObservation) DeepCopyInto(out *SmbFileShareObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.FileshareID != nil {
		in, out := &in.FileshareID, &out.FileshareID
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbFileShareObservation.
func (in *SmbFileShareObservation) DeepCopy() *SmbFileShareObservation {
	if in == nil {
		return nil
	}
	out := new(SmbFileShareObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbFileShareParameters) DeepCopyInto(out *SmbFileShareParameters) {
	*out = *in
	if in.AccessBasedEnumeration != nil {
		in, out := &in.AccessBasedEnumeration, &out.AccessBasedEnumeration
		*out = new(bool)
		**out = **in
	}
	if in.AdminUserList != nil {
		in, out := &in.AdminUserList, &out.AdminUserList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuditDestinationArn != nil {
		in, out := &in.AuditDestinationArn, &out.AuditDestinationArn
		*out = new(string)
		**out = **in
	}
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = new(string)
		**out = **in
	}
	if in.BucketRegion != nil {
		in, out := &in.BucketRegion, &out.BucketRegion
		*out = new(string)
		**out = **in
	}
	if in.CacheAttributes != nil {
		in, out := &in.CacheAttributes, &out.CacheAttributes
		*out = make([]SmbFileShareCacheAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CaseSensitivity != nil {
		in, out := &in.CaseSensitivity, &out.CaseSensitivity
		*out = new(string)
		**out = **in
	}
	if in.DefaultStorageClass != nil {
		in, out := &in.DefaultStorageClass, &out.DefaultStorageClass
		*out = new(string)
		**out = **in
	}
	if in.FileShareName != nil {
		in, out := &in.FileShareName, &out.FileShareName
		*out = new(string)
		**out = **in
	}
	if in.GatewayArn != nil {
		in, out := &in.GatewayArn, &out.GatewayArn
		*out = new(string)
		**out = **in
	}
	if in.GuessMimeTypeEnabled != nil {
		in, out := &in.GuessMimeTypeEnabled, &out.GuessMimeTypeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InvalidUserList != nil {
		in, out := &in.InvalidUserList, &out.InvalidUserList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KmsEncrypted != nil {
		in, out := &in.KmsEncrypted, &out.KmsEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.KmsKeyArn != nil {
		in, out := &in.KmsKeyArn, &out.KmsKeyArn
		*out = new(string)
		**out = **in
	}
	if in.LocationArn != nil {
		in, out := &in.LocationArn, &out.LocationArn
		*out = new(string)
		**out = **in
	}
	if in.NotificationPolicy != nil {
		in, out := &in.NotificationPolicy, &out.NotificationPolicy
		*out = new(string)
		**out = **in
	}
	if in.ObjectACL != nil {
		in, out := &in.ObjectACL, &out.ObjectACL
		*out = new(string)
		**out = **in
	}
	if in.OplocksEnabled != nil {
		in, out := &in.OplocksEnabled, &out.OplocksEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RequesterPays != nil {
		in, out := &in.RequesterPays, &out.RequesterPays
		*out = new(bool)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.SmbACLEnabled != nil {
		in, out := &in.SmbACLEnabled, &out.SmbACLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ValidUserList != nil {
		in, out := &in.ValidUserList, &out.ValidUserList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VpcEndpointDNSName != nil {
		in, out := &in.VpcEndpointDNSName, &out.VpcEndpointDNSName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbFileShareParameters.
func (in *SmbFileShareParameters) DeepCopy() *SmbFileShareParameters {
	if in == nil {
		return nil
	}
	out := new(SmbFileShareParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbFileShareSpec) DeepCopyInto(out *SmbFileShareSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbFileShareSpec.
func (in *SmbFileShareSpec) DeepCopy() *SmbFileShareSpec {
	if in == nil {
		return nil
	}
	out := new(SmbFileShareSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbFileShareStatus) DeepCopyInto(out *SmbFileShareStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbFileShareStatus.
func (in *SmbFileShareStatus) DeepCopy() *SmbFileShareStatus {
	if in == nil {
		return nil
	}
	out := new(SmbFileShareStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StoredIscsiVolume) DeepCopyInto(out *StoredIscsiVolume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StoredIscsiVolume.
func (in *StoredIscsiVolume) DeepCopy() *StoredIscsiVolume {
	if in == nil {
		return nil
	}
	out := new(StoredIscsiVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StoredIscsiVolume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StoredIscsiVolumeList) DeepCopyInto(out *StoredIscsiVolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StoredIscsiVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StoredIscsiVolumeList.
func (in *StoredIscsiVolumeList) DeepCopy() *StoredIscsiVolumeList {
	if in == nil {
		return nil
	}
	out := new(StoredIscsiVolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StoredIscsiVolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StoredIscsiVolumeObservation) DeepCopyInto(out *StoredIscsiVolumeObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ChapEnabled != nil {
		in, out := &in.ChapEnabled, &out.ChapEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LunNumber != nil {
		in, out := &in.LunNumber, &out.LunNumber
		*out = new(int64)
		**out = **in
	}
	if in.NetworkInterfacePort != nil {
		in, out := &in.NetworkInterfacePort, &out.NetworkInterfacePort
		*out = new(int64)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
	if in.VolumeAttachmentStatus != nil {
		in, out := &in.VolumeAttachmentStatus, &out.VolumeAttachmentStatus
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSizeInBytes != nil {
		in, out := &in.VolumeSizeInBytes, &out.VolumeSizeInBytes
		*out = new(int64)
		**out = **in
	}
	if in.VolumeStatus != nil {
		in, out := &in.VolumeStatus, &out.VolumeStatus
		*out = new(string)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StoredIscsiVolumeObservation.
func (in *StoredIscsiVolumeObservation) DeepCopy() *StoredIscsiVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(StoredIscsiVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StoredIscsiVolumeParameters) DeepCopyInto(out *StoredIscsiVolumeParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(string)
		**out = **in
	}
	if in.GatewayArn != nil {
		in, out := &in.GatewayArn, &out.GatewayArn
		*out = new(string)
		**out = **in
	}
	if in.KmsEncrypted != nil {
		in, out := &in.KmsEncrypted, &out.KmsEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.KmsKey != nil {
		in, out := &in.KmsKey, &out.KmsKey
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PreserveExistingData != nil {
		in, out := &in.PreserveExistingData, &out.PreserveExistingData
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetName != nil {
		in, out := &in.TargetName, &out.TargetName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StoredIscsiVolumeParameters.
func (in *StoredIscsiVolumeParameters) DeepCopy() *StoredIscsiVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(StoredIscsiVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StoredIscsiVolumeSpec) DeepCopyInto(out *StoredIscsiVolumeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StoredIscsiVolumeSpec.
func (in *StoredIscsiVolumeSpec) DeepCopy() *StoredIscsiVolumeSpec {
	if in == nil {
		return nil
	}
	out := new(StoredIscsiVolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StoredIscsiVolumeStatus) DeepCopyInto(out *StoredIscsiVolumeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StoredIscsiVolumeStatus.
func (in *StoredIscsiVolumeStatus) DeepCopy() *StoredIscsiVolumeStatus {
	if in == nil {
		return nil
	}
	out := new(StoredIscsiVolumeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TapePool) DeepCopyInto(out *TapePool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TapePool.
func (in *TapePool) DeepCopy() *TapePool {
	if in == nil {
		return nil
	}
	out := new(TapePool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TapePool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TapePoolList) DeepCopyInto(out *TapePoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TapePool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TapePoolList.
func (in *TapePoolList) DeepCopy() *TapePoolList {
	if in == nil {
		return nil
	}
	out := new(TapePoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TapePoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TapePoolObservation) DeepCopyInto(out *TapePoolObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TapePoolObservation.
func (in *TapePoolObservation) DeepCopy() *TapePoolObservation {
	if in == nil {
		return nil
	}
	out := new(TapePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TapePoolParameters) DeepCopyInto(out *TapePoolParameters) {
	*out = *in
	if in.PoolName != nil {
		in, out := &in.PoolName, &out.PoolName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RetentionLockTimeInDays != nil {
		in, out := &in.RetentionLockTimeInDays, &out.RetentionLockTimeInDays
		*out = new(int64)
		**out = **in
	}
	if in.RetentionLockType != nil {
		in, out := &in.RetentionLockType, &out.RetentionLockType
		*out = new(string)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TapePoolParameters.
func (in *TapePoolParameters) DeepCopy() *TapePoolParameters {
	if in == nil {
		return nil
	}
	out := new(TapePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TapePoolSpec) DeepCopyInto(out *TapePoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TapePoolSpec.
func (in *TapePoolSpec) DeepCopy() *TapePoolSpec {
	if in == nil {
		return nil
	}
	out := new(TapePoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TapePoolStatus) DeepCopyInto(out *TapePoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TapePoolStatus.
func (in *TapePoolStatus) DeepCopy() *TapePoolStatus {
	if in == nil {
		return nil
	}
	out := new(TapePoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UploadBuffer) DeepCopyInto(out *UploadBuffer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UploadBuffer.
func (in *UploadBuffer) DeepCopy() *UploadBuffer {
	if in == nil {
		return nil
	}
	out := new(UploadBuffer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UploadBuffer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UploadBufferList) DeepCopyInto(out *UploadBufferList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UploadBuffer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UploadBufferList.
func (in *UploadBufferList) DeepCopy() *UploadBufferList {
	if in == nil {
		return nil
	}
	out := new(UploadBufferList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UploadBufferList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UploadBufferObservation) DeepCopyInto(out *UploadBufferObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UploadBufferObservation.
func (in *UploadBufferObservation) DeepCopy() *UploadBufferObservation {
	if in == nil {
		return nil
	}
	out := new(UploadBufferObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UploadBufferParameters) DeepCopyInto(out *UploadBufferParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(string)
		**out = **in
	}
	if in.DiskPath != nil {
		in, out := &in.DiskPath, &out.DiskPath
		*out = new(string)
		**out = **in
	}
	if in.GatewayArn != nil {
		in, out := &in.GatewayArn, &out.GatewayArn
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UploadBufferParameters.
func (in *UploadBufferParameters) DeepCopy() *UploadBufferParameters {
	if in == nil {
		return nil
	}
	out := new(UploadBufferParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UploadBufferSpec) DeepCopyInto(out *UploadBufferSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UploadBufferSpec.
func (in *UploadBufferSpec) DeepCopy() *UploadBufferSpec {
	if in == nil {
		return nil
	}
	out := new(UploadBufferSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UploadBufferStatus) DeepCopyInto(out *UploadBufferStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UploadBufferStatus.
func (in *UploadBufferStatus) DeepCopy() *UploadBufferStatus {
	if in == nil {
		return nil
	}
	out := new(UploadBufferStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkingStorage) DeepCopyInto(out *WorkingStorage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkingStorage.
func (in *WorkingStorage) DeepCopy() *WorkingStorage {
	if in == nil {
		return nil
	}
	out := new(WorkingStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkingStorage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkingStorageList) DeepCopyInto(out *WorkingStorageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkingStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkingStorageList.
func (in *WorkingStorageList) DeepCopy() *WorkingStorageList {
	if in == nil {
		return nil
	}
	out := new(WorkingStorageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkingStorageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkingStorageObservation) DeepCopyInto(out *WorkingStorageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkingStorageObservation.
func (in *WorkingStorageObservation) DeepCopy() *WorkingStorageObservation {
	if in == nil {
		return nil
	}
	out := new(WorkingStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkingStorageParameters) DeepCopyInto(out *WorkingStorageParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(string)
		**out = **in
	}
	if in.GatewayArn != nil {
		in, out := &in.GatewayArn, &out.GatewayArn
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkingStorageParameters.
func (in *WorkingStorageParameters) DeepCopy() *WorkingStorageParameters {
	if in == nil {
		return nil
	}
	out := new(WorkingStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkingStorageSpec) DeepCopyInto(out *WorkingStorageSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkingStorageSpec.
func (in *WorkingStorageSpec) DeepCopy() *WorkingStorageSpec {
	if in == nil {
		return nil
	}
	out := new(WorkingStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkingStorageStatus) DeepCopyInto(out *WorkingStorageStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkingStorageStatus.
func (in *WorkingStorageStatus) DeepCopy() *WorkingStorageStatus {
	if in == nil {
		return nil
	}
	out := new(WorkingStorageStatus)
	in.DeepCopyInto(out)
	return out
}
