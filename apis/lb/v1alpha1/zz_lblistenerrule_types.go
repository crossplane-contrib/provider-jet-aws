/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionAuthenticateCognitoObservation struct {
}

type ActionAuthenticateCognitoParameters struct {

	// +kubebuilder:validation:Optional
	AuthenticationRequestExtraParams map[string]string `json:"authenticationRequestExtraParams,omitempty" tf:"authentication_request_extra_params"`

	// +kubebuilder:validation:Optional
	OnUnauthenticatedRequest *string `json:"onUnauthenticatedRequest,omitempty" tf:"on_unauthenticated_request"`

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope"`

	// +kubebuilder:validation:Optional
	SessionCookieName *string `json:"sessionCookieName,omitempty" tf:"session_cookie_name"`

	// +kubebuilder:validation:Optional
	SessionTimeout *int64 `json:"sessionTimeout,omitempty" tf:"session_timeout"`

	// +kubebuilder:validation:Required
	UserPoolArn string `json:"userPoolArn" tf:"user_pool_arn"`

	// +kubebuilder:validation:Required
	UserPoolClientID string `json:"userPoolClientId" tf:"user_pool_client_id"`

	// +kubebuilder:validation:Required
	UserPoolDomain string `json:"userPoolDomain" tf:"user_pool_domain"`
}

type ActionAuthenticateOidcObservation struct {
}

type ActionAuthenticateOidcParameters struct {

	// +kubebuilder:validation:Optional
	AuthenticationRequestExtraParams map[string]string `json:"authenticationRequestExtraParams,omitempty" tf:"authentication_request_extra_params"`

	// +kubebuilder:validation:Required
	AuthorizationEndpoint string `json:"authorizationEndpoint" tf:"authorization_endpoint"`

	// +kubebuilder:validation:Required
	ClientID string `json:"clientId" tf:"client_id"`

	// +kubebuilder:validation:Required
	ClientSecretSecretRef v1.SecretKeySelector `json:"clientSecretSecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	Issuer string `json:"issuer" tf:"issuer"`

	// +kubebuilder:validation:Optional
	OnUnauthenticatedRequest *string `json:"onUnauthenticatedRequest,omitempty" tf:"on_unauthenticated_request"`

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope"`

	// +kubebuilder:validation:Optional
	SessionCookieName *string `json:"sessionCookieName,omitempty" tf:"session_cookie_name"`

	// +kubebuilder:validation:Optional
	SessionTimeout *int64 `json:"sessionTimeout,omitempty" tf:"session_timeout"`

	// +kubebuilder:validation:Required
	TokenEndpoint string `json:"tokenEndpoint" tf:"token_endpoint"`

	// +kubebuilder:validation:Required
	UserInfoEndpoint string `json:"userInfoEndpoint" tf:"user_info_endpoint"`
}

type ActionFixedResponseObservation struct {
}

type ActionFixedResponseParameters struct {

	// +kubebuilder:validation:Required
	ContentType string `json:"contentType" tf:"content_type"`

	// +kubebuilder:validation:Optional
	MessageBody *string `json:"messageBody,omitempty" tf:"message_body"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code"`
}

type ActionForwardObservation struct {
}

type ActionForwardParameters struct {

	// +kubebuilder:validation:Optional
	Stickiness []ForwardStickinessParameters `json:"stickiness,omitempty" tf:"stickiness"`

	// +kubebuilder:validation:Required
	TargetGroup []ForwardTargetGroupParameters `json:"targetGroup" tf:"target_group"`
}

type ActionObservation struct {
}

type ActionParameters struct {

	// +kubebuilder:validation:Optional
	AuthenticateCognito []ActionAuthenticateCognitoParameters `json:"authenticateCognito,omitempty" tf:"authenticate_cognito"`

	// +kubebuilder:validation:Optional
	AuthenticateOidc []ActionAuthenticateOidcParameters `json:"authenticateOidc,omitempty" tf:"authenticate_oidc"`

	// +kubebuilder:validation:Optional
	FixedResponse []ActionFixedResponseParameters `json:"fixedResponse,omitempty" tf:"fixed_response"`

	// +kubebuilder:validation:Optional
	Forward []ActionForwardParameters `json:"forward,omitempty" tf:"forward"`

	// +kubebuilder:validation:Optional
	Order *int64 `json:"order,omitempty" tf:"order"`

	// +kubebuilder:validation:Optional
	Redirect []ActionRedirectParameters `json:"redirect,omitempty" tf:"redirect"`

	// +kubebuilder:validation:Optional
	TargetGroupArn *string `json:"targetGroupArn,omitempty" tf:"target_group_arn"`

	// +kubebuilder:validation:Required
	Type string `json:"type" tf:"type"`
}

type ActionRedirectObservation struct {
}

type ActionRedirectParameters struct {

	// +kubebuilder:validation:Optional
	Host *string `json:"host,omitempty" tf:"host"`

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port"`

	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol"`

	// +kubebuilder:validation:Optional
	Query *string `json:"query,omitempty" tf:"query"`

	// +kubebuilder:validation:Required
	StatusCode string `json:"statusCode" tf:"status_code"`
}

type ConditionObservation struct {
}

type ConditionParameters struct {

	// +kubebuilder:validation:Optional
	HTTPHeader []HTTPHeaderParameters `json:"httpHeader,omitempty" tf:"http_header"`

	// +kubebuilder:validation:Optional
	HTTPRequestMethod []HTTPRequestMethodParameters `json:"httpRequestMethod,omitempty" tf:"http_request_method"`

	// +kubebuilder:validation:Optional
	HostHeader []HostHeaderParameters `json:"hostHeader,omitempty" tf:"host_header"`

	// +kubebuilder:validation:Optional
	PathPattern []PathPatternParameters `json:"pathPattern,omitempty" tf:"path_pattern"`

	// +kubebuilder:validation:Optional
	QueryString []QueryStringParameters `json:"queryString,omitempty" tf:"query_string"`

	// +kubebuilder:validation:Optional
	SourceIP []SourceIPParameters `json:"sourceIp,omitempty" tf:"source_ip"`
}

type ForwardStickinessObservation struct {
}

type ForwardStickinessParameters struct {

	// +kubebuilder:validation:Required
	Duration int64 `json:"duration" tf:"duration"`

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
}

type ForwardTargetGroupObservation struct {
}

type ForwardTargetGroupParameters struct {

	// +kubebuilder:validation:Required
	Arn string `json:"arn" tf:"arn"`

	// +kubebuilder:validation:Optional
	Weight *int64 `json:"weight,omitempty" tf:"weight"`
}

type HTTPHeaderObservation struct {
}

type HTTPHeaderParameters struct {

	// +kubebuilder:validation:Required
	HTTPHeaderName string `json:"httpHeaderName" tf:"http_header_name"`

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type HTTPRequestMethodObservation struct {
}

type HTTPRequestMethodParameters struct {

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type HostHeaderObservation struct {
}

type HostHeaderParameters struct {

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type LbListenerRuleObservation struct {
	Arn string `json:"arn,omitempty" tf:"arn"`
}

type LbListenerRuleParameters struct {

	// +kubebuilder:validation:Required
	Action []ActionParameters `json:"action" tf:"action"`

	// +kubebuilder:validation:Required
	Condition []ConditionParameters `json:"condition" tf:"condition"`

	// +kubebuilder:validation:Required
	ListenerArn string `json:"listenerArn" tf:"listener_arn"`

	// +kubebuilder:validation:Optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region string `json:"region" tf:"-"`

	// +kubebuilder:validation:Optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags"`

	// +kubebuilder:validation:Optional
	TagsAll map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`
}

type PathPatternObservation struct {
}

type PathPatternParameters struct {

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type QueryStringObservation struct {
}

type QueryStringParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type SourceIPObservation struct {
}

type SourceIPParameters struct {

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

// LbListenerRuleSpec defines the desired state of LbListenerRule
type LbListenerRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LbListenerRuleParameters `json:"forProvider"`
}

// LbListenerRuleStatus defines the observed state of LbListenerRule.
type LbListenerRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LbListenerRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// LbListenerRule is the Schema for the LbListenerRules API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type LbListenerRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LbListenerRuleSpec   `json:"spec"`
	Status            LbListenerRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LbListenerRuleList contains a list of LbListenerRules
type LbListenerRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LbListenerRule `json:"items"`
}

// Repository type metadata.
var (
	LbListenerRuleKind             = "LbListenerRule"
	LbListenerRuleGroupKind        = schema.GroupKind{Group: Group, Kind: LbListenerRuleKind}.String()
	LbListenerRuleKindAPIVersion   = LbListenerRuleKind + "." + GroupVersion.String()
	LbListenerRuleGroupVersionKind = GroupVersion.WithKind(LbListenerRuleKind)
)

func init() {
	SchemeBuilder.Register(&LbListenerRule{}, &LbListenerRuleList{})
}
