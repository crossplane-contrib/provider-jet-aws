/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type RegexMatchTupleFieldToMatchObservation struct {
}

type RegexMatchTupleFieldToMatchParameters struct {
	Data *string `json:"data,omitempty" tf:"data"`

	Type string `json:"type" tf:"type"`
}

type RegexMatchTupleObservation struct {
}

type RegexMatchTupleParameters struct {
	FieldToMatch []RegexMatchTupleFieldToMatchParameters `json:"fieldToMatch" tf:"field_to_match"`

	RegexPatternSetID string `json:"regexPatternSetID" tf:"regex_pattern_set_id"`

	TextTransformation string `json:"textTransformation" tf:"text_transformation"`
}

type WafRegexMatchSetObservation struct {
	ARN string `json:"arn" tf:"arn"`
}

type WafRegexMatchSetParameters struct {
	Name string `json:"name" tf:"name"`

	RegexMatchTuple []RegexMatchTupleParameters `json:"regexMatchTuple,omitempty" tf:"regex_match_tuple"`
}

// WafRegexMatchSetSpec defines the desired state of WafRegexMatchSet
type WafRegexMatchSetSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       WafRegexMatchSetParameters `json:"forProvider"`
}

// WafRegexMatchSetStatus defines the observed state of WafRegexMatchSet.
type WafRegexMatchSetStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          WafRegexMatchSetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WafRegexMatchSet is the Schema for the WafRegexMatchSets API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type WafRegexMatchSet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WafRegexMatchSetSpec   `json:"spec"`
	Status            WafRegexMatchSetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WafRegexMatchSetList contains a list of WafRegexMatchSets
type WafRegexMatchSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WafRegexMatchSet `json:"items"`
}

// Repository type metadata.
var (
	WafRegexMatchSetKind             = "WafRegexMatchSet"
	WafRegexMatchSetGroupKind        = schema.GroupKind{Group: Group, Kind: WafRegexMatchSetKind}.String()
	WafRegexMatchSetKindAPIVersion   = WafRegexMatchSetKind + "." + GroupVersion.String()
	WafRegexMatchSetGroupVersionKind = GroupVersion.WithKind(WafRegexMatchSetKind)
)

func init() {
	SchemeBuilder.Register(&WafRegexMatchSet{}, &WafRegexMatchSetList{})
}
