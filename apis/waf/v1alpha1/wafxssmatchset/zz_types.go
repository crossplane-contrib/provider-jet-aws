/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=waf.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/waf/v1alpha1"
)

type FieldToMatchObservation struct {
}

type FieldToMatchParameters struct {
	Data *string `json:"data,omitempty" tf:"data"`

	Type string `json:"type" tf:"type"`
}

type WafXssMatchSetObservation struct {
	Arn string `json:"arn" tf:"arn"`
}

type WafXssMatchSetParameters struct {
	Name string `json:"name" tf:"name"`

	XssMatchTuples []XssMatchTuplesParameters `json:"xssMatchTuples,omitempty" tf:"xss_match_tuples"`
}

type XssMatchTuplesObservation struct {
}

type XssMatchTuplesParameters struct {
	FieldToMatch []FieldToMatchParameters `json:"fieldToMatch" tf:"field_to_match"`

	TextTransformation string `json:"textTransformation" tf:"text_transformation"`
}

// WafXssMatchSetSpec defines the desired state of WafXssMatchSet
type WafXssMatchSetSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       WafXssMatchSetParameters `json:"forProvider"`
}

// WafXssMatchSetStatus defines the observed state of WafXssMatchSet.
type WafXssMatchSetStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          WafXssMatchSetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WafXssMatchSet is the Schema for the WafXssMatchSets API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type WafXssMatchSet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WafXssMatchSetSpec   `json:"spec"`
	Status            WafXssMatchSetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WafXssMatchSetList contains a list of WafXssMatchSets
type WafXssMatchSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WafXssMatchSet `json:"items"`
}

// Repository type metadata.
var (
	WafXssMatchSetKind             = "WafXssMatchSet"
	WafXssMatchSetGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: WafXssMatchSetKind}.String()
	WafXssMatchSetKindAPIVersion   = WafXssMatchSetKind + "." + v1alpha1.GroupVersion.String()
	WafXssMatchSetGroupVersionKind = v1alpha1.GroupVersion.WithKind(WafXssMatchSetKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&WafXssMatchSet{}, &WafXssMatchSetList{})
}
