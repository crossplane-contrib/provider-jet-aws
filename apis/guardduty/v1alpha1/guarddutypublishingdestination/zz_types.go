/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=guardduty.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/guardduty/v1alpha1"
)

type GuarddutyPublishingDestinationObservation struct {
}

type GuarddutyPublishingDestinationParameters struct {
	DestinationArn string `json:"destinationArn" tf:"destination_arn"`

	DestinationType *string `json:"destinationType,omitempty" tf:"destination_type"`

	DetectorId string `json:"detectorId" tf:"detector_id"`

	KmsKeyArn string `json:"kmsKeyArn" tf:"kms_key_arn"`
}

// GuarddutyPublishingDestinationSpec defines the desired state of GuarddutyPublishingDestination
type GuarddutyPublishingDestinationSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       GuarddutyPublishingDestinationParameters `json:"forProvider"`
}

// GuarddutyPublishingDestinationStatus defines the observed state of GuarddutyPublishingDestination.
type GuarddutyPublishingDestinationStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          GuarddutyPublishingDestinationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// GuarddutyPublishingDestination is the Schema for the GuarddutyPublishingDestinations API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type GuarddutyPublishingDestination struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GuarddutyPublishingDestinationSpec   `json:"spec"`
	Status            GuarddutyPublishingDestinationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GuarddutyPublishingDestinationList contains a list of GuarddutyPublishingDestinations
type GuarddutyPublishingDestinationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GuarddutyPublishingDestination `json:"items"`
}

// Repository type metadata.
var (
	GuarddutyPublishingDestinationKind             = "GuarddutyPublishingDestination"
	GuarddutyPublishingDestinationGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: GuarddutyPublishingDestinationKind}.String()
	GuarddutyPublishingDestinationKindAPIVersion   = GuarddutyPublishingDestinationKind + "." + v1alpha1.GroupVersion.String()
	GuarddutyPublishingDestinationGroupVersionKind = v1alpha1.GroupVersion.WithKind(GuarddutyPublishingDestinationKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&GuarddutyPublishingDestination{}, &GuarddutyPublishingDestinationList{})
}
