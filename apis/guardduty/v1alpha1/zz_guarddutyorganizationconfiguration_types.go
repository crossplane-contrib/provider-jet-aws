/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type DatasourcesS3LogsObservation struct {
}

type DatasourcesS3LogsParameters struct {
	AutoEnable bool `json:"autoEnable" tf:"auto_enable"`
}

type GuarddutyOrganizationConfigurationDatasourcesObservation struct {
}

type GuarddutyOrganizationConfigurationDatasourcesParameters struct {
	S3Logs []DatasourcesS3LogsParameters `json:"s3Logs,omitempty" tf:"s3_logs"`
}

type GuarddutyOrganizationConfigurationObservation struct {
}

type GuarddutyOrganizationConfigurationParameters struct {
	AutoEnable bool `json:"autoEnable" tf:"auto_enable"`

	Datasources []GuarddutyOrganizationConfigurationDatasourcesParameters `json:"datasources,omitempty" tf:"datasources"`

	DetectorID string `json:"detectorID" tf:"detector_id"`
}

// GuarddutyOrganizationConfigurationSpec defines the desired state of GuarddutyOrganizationConfiguration
type GuarddutyOrganizationConfigurationSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       GuarddutyOrganizationConfigurationParameters `json:"forProvider"`
}

// GuarddutyOrganizationConfigurationStatus defines the observed state of GuarddutyOrganizationConfiguration.
type GuarddutyOrganizationConfigurationStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          GuarddutyOrganizationConfigurationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// GuarddutyOrganizationConfiguration is the Schema for the GuarddutyOrganizationConfigurations API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type GuarddutyOrganizationConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GuarddutyOrganizationConfigurationSpec   `json:"spec"`
	Status            GuarddutyOrganizationConfigurationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GuarddutyOrganizationConfigurationList contains a list of GuarddutyOrganizationConfigurations
type GuarddutyOrganizationConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GuarddutyOrganizationConfiguration `json:"items"`
}

// Repository type metadata.
var (
	GuarddutyOrganizationConfigurationKind             = "GuarddutyOrganizationConfiguration"
	GuarddutyOrganizationConfigurationGroupKind        = schema.GroupKind{Group: Group, Kind: GuarddutyOrganizationConfigurationKind}.String()
	GuarddutyOrganizationConfigurationKindAPIVersion   = GuarddutyOrganizationConfigurationKind + "." + GroupVersion.String()
	GuarddutyOrganizationConfigurationGroupVersionKind = GroupVersion.WithKind(GuarddutyOrganizationConfigurationKind)
)

func init() {
	SchemeBuilder.Register(&GuarddutyOrganizationConfiguration{}, &GuarddutyOrganizationConfigurationList{})
}
