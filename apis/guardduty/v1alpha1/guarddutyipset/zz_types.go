/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=guardduty.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/guardduty/v1alpha1"
)

type GuarddutyIpsetObservation struct {
	Arn string `json:"arn" tf:"arn"`
}

type GuarddutyIpsetParameters struct {
	Activate bool `json:"activate" tf:"activate"`

	DetectorId string `json:"detectorId" tf:"detector_id"`

	Format string `json:"format" tf:"format"`

	Location string `json:"location" tf:"location"`

	Name string `json:"name" tf:"name"`

	Tags map[string]string `json:"tags,omitempty" tf:"tags"`

	TagsAll map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`
}

// GuarddutyIpsetSpec defines the desired state of GuarddutyIpset
type GuarddutyIpsetSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       GuarddutyIpsetParameters `json:"forProvider"`
}

// GuarddutyIpsetStatus defines the observed state of GuarddutyIpset.
type GuarddutyIpsetStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          GuarddutyIpsetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// GuarddutyIpset is the Schema for the GuarddutyIpsets API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type GuarddutyIpset struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GuarddutyIpsetSpec   `json:"spec"`
	Status            GuarddutyIpsetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GuarddutyIpsetList contains a list of GuarddutyIpsets
type GuarddutyIpsetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GuarddutyIpset `json:"items"`
}

// Repository type metadata.
var (
	GuarddutyIpsetKind             = "GuarddutyIpset"
	GuarddutyIpsetGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: GuarddutyIpsetKind}.String()
	GuarddutyIpsetKindAPIVersion   = GuarddutyIpsetKind + "." + v1alpha1.GroupVersion.String()
	GuarddutyIpsetGroupVersionKind = v1alpha1.GroupVersion.WithKind(GuarddutyIpsetKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&GuarddutyIpset{}, &GuarddutyIpsetList{})
}
