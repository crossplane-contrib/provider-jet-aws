/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type InviteAccepterObservation struct {
}

type InviteAccepterParameters struct {

	// +kubebuilder:validation:Required
	DetectorID *string `json:"detectorId" tf:"detector_id,omitempty"`

	// +kubebuilder:validation:Required
	MasterAccountID *string `json:"masterAccountId" tf:"master_account_id,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`
}

// InviteAccepterSpec defines the desired state of InviteAccepter
type InviteAccepterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InviteAccepterParameters `json:"forProvider"`
}

// InviteAccepterStatus defines the observed state of InviteAccepter.
type InviteAccepterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InviteAccepterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// InviteAccepter is the Schema for the InviteAccepters API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type InviteAccepter struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InviteAccepterSpec   `json:"spec"`
	Status            InviteAccepterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InviteAccepterList contains a list of InviteAccepters
type InviteAccepterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []InviteAccepter `json:"items"`
}

// Repository type metadata.
var (
	InviteAccepterKind             = "InviteAccepter"
	InviteAccepterGroupKind        = schema.GroupKind{Group: Group, Kind: InviteAccepterKind}.String()
	InviteAccepterKindAPIVersion   = InviteAccepterKind + "." + GroupVersion.String()
	InviteAccepterGroupVersionKind = GroupVersion.WithKind(InviteAccepterKind)
)

func init() {
	SchemeBuilder.Register(&InviteAccepter{}, &InviteAccepterList{})
}
