// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogConfigurationObservation) DeepCopyInto(out *AuditLogConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogConfigurationObservation.
func (in *AuditLogConfigurationObservation) DeepCopy() *AuditLogConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(AuditLogConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogConfigurationParameters) DeepCopyInto(out *AuditLogConfigurationParameters) {
	*out = *in
	if in.AuditLogDestination != nil {
		in, out := &in.AuditLogDestination, &out.AuditLogDestination
		*out = new(string)
		**out = **in
	}
	if in.FileAccessAuditLogLevel != nil {
		in, out := &in.FileAccessAuditLogLevel, &out.FileAccessAuditLogLevel
		*out = new(string)
		**out = **in
	}
	if in.FileShareAccessAuditLogLevel != nil {
		in, out := &in.FileShareAccessAuditLogLevel, &out.FileShareAccessAuditLogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogConfigurationParameters.
func (in *AuditLogConfigurationParameters) DeepCopy() *AuditLogConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(AuditLogConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystem) DeepCopyInto(out *LustreFileSystem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystem.
func (in *LustreFileSystem) DeepCopy() *LustreFileSystem {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LustreFileSystem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystemList) DeepCopyInto(out *LustreFileSystemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LustreFileSystem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystemList.
func (in *LustreFileSystemList) DeepCopy() *LustreFileSystemList {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LustreFileSystemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystemObservation) DeepCopyInto(out *LustreFileSystemObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.MountName != nil {
		in, out := &in.MountName, &out.MountName
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIds != nil {
		in, out := &in.NetworkInterfaceIds, &out.NetworkInterfaceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystemObservation.
func (in *LustreFileSystemObservation) DeepCopy() *LustreFileSystemObservation {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystemParameters) DeepCopyInto(out *LustreFileSystemParameters) {
	*out = *in
	if in.AutoImportPolicy != nil {
		in, out := &in.AutoImportPolicy, &out.AutoImportPolicy
		*out = new(string)
		**out = **in
	}
	if in.AutomaticBackupRetentionDays != nil {
		in, out := &in.AutomaticBackupRetentionDays, &out.AutomaticBackupRetentionDays
		*out = new(int64)
		**out = **in
	}
	if in.CopyTagsToBackups != nil {
		in, out := &in.CopyTagsToBackups, &out.CopyTagsToBackups
		*out = new(bool)
		**out = **in
	}
	if in.DailyAutomaticBackupStartTime != nil {
		in, out := &in.DailyAutomaticBackupStartTime, &out.DailyAutomaticBackupStartTime
		*out = new(string)
		**out = **in
	}
	if in.DataCompressionType != nil {
		in, out := &in.DataCompressionType, &out.DataCompressionType
		*out = new(string)
		**out = **in
	}
	if in.DeploymentType != nil {
		in, out := &in.DeploymentType, &out.DeploymentType
		*out = new(string)
		**out = **in
	}
	if in.DriveCacheType != nil {
		in, out := &in.DriveCacheType, &out.DriveCacheType
		*out = new(string)
		**out = **in
	}
	if in.ExportPath != nil {
		in, out := &in.ExportPath, &out.ExportPath
		*out = new(string)
		**out = **in
	}
	if in.ImportPath != nil {
		in, out := &in.ImportPath, &out.ImportPath
		*out = new(string)
		**out = **in
	}
	if in.ImportedFileChunkSize != nil {
		in, out := &in.ImportedFileChunkSize, &out.ImportedFileChunkSize
		*out = new(int64)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.PerUnitStorageThroughput != nil {
		in, out := &in.PerUnitStorageThroughput, &out.PerUnitStorageThroughput
		*out = new(int64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StorageCapacity != nil {
		in, out := &in.StorageCapacity, &out.StorageCapacity
		*out = new(int64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WeeklyMaintenanceStartTime != nil {
		in, out := &in.WeeklyMaintenanceStartTime, &out.WeeklyMaintenanceStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystemParameters.
func (in *LustreFileSystemParameters) DeepCopy() *LustreFileSystemParameters {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystemSpec) DeepCopyInto(out *LustreFileSystemSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystemSpec.
func (in *LustreFileSystemSpec) DeepCopy() *LustreFileSystemSpec {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LustreFileSystemStatus) DeepCopyInto(out *LustreFileSystemStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LustreFileSystemStatus.
func (in *LustreFileSystemStatus) DeepCopy() *LustreFileSystemStatus {
	if in == nil {
		return nil
	}
	out := new(LustreFileSystemStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelfManagedActiveDirectoryObservation) DeepCopyInto(out *SelfManagedActiveDirectoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelfManagedActiveDirectoryObservation.
func (in *SelfManagedActiveDirectoryObservation) DeepCopy() *SelfManagedActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(SelfManagedActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelfManagedActiveDirectoryParameters) DeepCopyInto(out *SelfManagedActiveDirectoryParameters) {
	*out = *in
	if in.DNSIps != nil {
		in, out := &in.DNSIps, &out.DNSIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.FileSystemAdministratorsGroup != nil {
		in, out := &in.FileSystemAdministratorsGroup, &out.FileSystemAdministratorsGroup
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedName != nil {
		in, out := &in.OrganizationalUnitDistinguishedName, &out.OrganizationalUnitDistinguishedName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelfManagedActiveDirectoryParameters.
func (in *SelfManagedActiveDirectoryParameters) DeepCopy() *SelfManagedActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(SelfManagedActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystem) DeepCopyInto(out *WindowsFileSystem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystem.
func (in *WindowsFileSystem) DeepCopy() *WindowsFileSystem {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsFileSystem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystemList) DeepCopyInto(out *WindowsFileSystemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WindowsFileSystem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystemList.
func (in *WindowsFileSystemList) DeepCopy() *WindowsFileSystemList {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsFileSystemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystemObservation) DeepCopyInto(out *WindowsFileSystemObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIds != nil {
		in, out := &in.NetworkInterfaceIds, &out.NetworkInterfaceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PreferredFileServerIP != nil {
		in, out := &in.PreferredFileServerIP, &out.PreferredFileServerIP
		*out = new(string)
		**out = **in
	}
	if in.RemoteAdministrationEndpoint != nil {
		in, out := &in.RemoteAdministrationEndpoint, &out.RemoteAdministrationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystemObservation.
func (in *WindowsFileSystemObservation) DeepCopy() *WindowsFileSystemObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystemParameters) DeepCopyInto(out *WindowsFileSystemParameters) {
	*out = *in
	if in.ActiveDirectoryID != nil {
		in, out := &in.ActiveDirectoryID, &out.ActiveDirectoryID
		*out = new(string)
		**out = **in
	}
	if in.Aliases != nil {
		in, out := &in.Aliases, &out.Aliases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuditLogConfiguration != nil {
		in, out := &in.AuditLogConfiguration, &out.AuditLogConfiguration
		*out = make([]AuditLogConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutomaticBackupRetentionDays != nil {
		in, out := &in.AutomaticBackupRetentionDays, &out.AutomaticBackupRetentionDays
		*out = new(int64)
		**out = **in
	}
	if in.CopyTagsToBackups != nil {
		in, out := &in.CopyTagsToBackups, &out.CopyTagsToBackups
		*out = new(bool)
		**out = **in
	}
	if in.DailyAutomaticBackupStartTime != nil {
		in, out := &in.DailyAutomaticBackupStartTime, &out.DailyAutomaticBackupStartTime
		*out = new(string)
		**out = **in
	}
	if in.DeploymentType != nil {
		in, out := &in.DeploymentType, &out.DeploymentType
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.PreferredSubnetID != nil {
		in, out := &in.PreferredSubnetID, &out.PreferredSubnetID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SelfManagedActiveDirectory != nil {
		in, out := &in.SelfManagedActiveDirectory, &out.SelfManagedActiveDirectory
		*out = make([]SelfManagedActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipFinalBackup != nil {
		in, out := &in.SkipFinalBackup, &out.SkipFinalBackup
		*out = new(bool)
		**out = **in
	}
	if in.StorageCapacity != nil {
		in, out := &in.StorageCapacity, &out.StorageCapacity
		*out = new(int64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ThroughputCapacity != nil {
		in, out := &in.ThroughputCapacity, &out.ThroughputCapacity
		*out = new(int64)
		**out = **in
	}
	if in.WeeklyMaintenanceStartTime != nil {
		in, out := &in.WeeklyMaintenanceStartTime, &out.WeeklyMaintenanceStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystemParameters.
func (in *WindowsFileSystemParameters) DeepCopy() *WindowsFileSystemParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystemSpec) DeepCopyInto(out *WindowsFileSystemSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystemSpec.
func (in *WindowsFileSystemSpec) DeepCopy() *WindowsFileSystemSpec {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFileSystemStatus) DeepCopyInto(out *WindowsFileSystemStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFileSystemStatus.
func (in *WindowsFileSystemStatus) DeepCopy() *WindowsFileSystemStatus {
	if in == nil {
		return nil
	}
	out := new(WindowsFileSystemStatus)
	in.DeepCopyInto(out)
	return out
}
