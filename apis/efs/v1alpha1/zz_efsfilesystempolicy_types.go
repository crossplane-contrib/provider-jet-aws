/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type EfsFileSystemPolicyObservation struct {
}

type EfsFileSystemPolicyParameters struct {
	FileSystemID string `json:"fileSystemID" tf:"file_system_id"`

	Policy string `json:"policy" tf:"policy"`
}

// EfsFileSystemPolicySpec defines the desired state of EfsFileSystemPolicy
type EfsFileSystemPolicySpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       EfsFileSystemPolicyParameters `json:"forProvider"`
}

// EfsFileSystemPolicyStatus defines the observed state of EfsFileSystemPolicy.
type EfsFileSystemPolicyStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          EfsFileSystemPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// EfsFileSystemPolicy is the Schema for the EfsFileSystemPolicys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type EfsFileSystemPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EfsFileSystemPolicySpec   `json:"spec"`
	Status            EfsFileSystemPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EfsFileSystemPolicyList contains a list of EfsFileSystemPolicys
type EfsFileSystemPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EfsFileSystemPolicy `json:"items"`
}

// Repository type metadata.
var (
	EfsFileSystemPolicyKind             = "EfsFileSystemPolicy"
	EfsFileSystemPolicyGroupKind        = schema.GroupKind{Group: Group, Kind: EfsFileSystemPolicyKind}.String()
	EfsFileSystemPolicyKindAPIVersion   = EfsFileSystemPolicyKind + "." + GroupVersion.String()
	EfsFileSystemPolicyGroupVersionKind = GroupVersion.WithKind(EfsFileSystemPolicyKind)
)

func init() {
	SchemeBuilder.Register(&EfsFileSystemPolicy{}, &EfsFileSystemPolicyList{})
}
