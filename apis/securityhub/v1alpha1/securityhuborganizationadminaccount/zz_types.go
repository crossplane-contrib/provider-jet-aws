/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=securityhub.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/securityhub/v1alpha1"
)

type SecurityhubOrganizationAdminAccountObservation struct {
}

type SecurityhubOrganizationAdminAccountParameters struct {
	AdminAccountId string `json:"adminAccountId" tf:"admin_account_id"`
}

// SecurityhubOrganizationAdminAccountSpec defines the desired state of SecurityhubOrganizationAdminAccount
type SecurityhubOrganizationAdminAccountSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       SecurityhubOrganizationAdminAccountParameters `json:"forProvider"`
}

// SecurityhubOrganizationAdminAccountStatus defines the observed state of SecurityhubOrganizationAdminAccount.
type SecurityhubOrganizationAdminAccountStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          SecurityhubOrganizationAdminAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityhubOrganizationAdminAccount is the Schema for the SecurityhubOrganizationAdminAccounts API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type SecurityhubOrganizationAdminAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SecurityhubOrganizationAdminAccountSpec   `json:"spec"`
	Status            SecurityhubOrganizationAdminAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityhubOrganizationAdminAccountList contains a list of SecurityhubOrganizationAdminAccounts
type SecurityhubOrganizationAdminAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SecurityhubOrganizationAdminAccount `json:"items"`
}

// Repository type metadata.
var (
	SecurityhubOrganizationAdminAccountKind             = "SecurityhubOrganizationAdminAccount"
	SecurityhubOrganizationAdminAccountGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: SecurityhubOrganizationAdminAccountKind}.String()
	SecurityhubOrganizationAdminAccountKindAPIVersion   = SecurityhubOrganizationAdminAccountKind + "." + v1alpha1.GroupVersion.String()
	SecurityhubOrganizationAdminAccountGroupVersionKind = v1alpha1.GroupVersion.WithKind(SecurityhubOrganizationAdminAccountKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&SecurityhubOrganizationAdminAccount{}, &SecurityhubOrganizationAdminAccountList{})
}
