/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AwsAccountIDObservation struct {
}

type AwsAccountIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type CompanyNameObservation struct {
}

type CompanyNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ComplianceStatusObservation struct {
}

type ComplianceStatusParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ConfidenceObservation struct {
}

type ConfidenceParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type CreatedAtObservation struct {
}

type CreatedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []DateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type CriticalityObservation struct {
}

type CriticalityParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type DateRangeObservation struct {
}

type DateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// +kubebuilder:validation:Required
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type DescriptionObservation struct {
}

type DescriptionParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type FiltersObservation struct {
}

type FiltersParameters struct {

	// +kubebuilder:validation:Optional
	AwsAccountID []AwsAccountIDParameters `json:"awsAccountId,omitempty" tf:"aws_account_id,omitempty"`

	// +kubebuilder:validation:Optional
	CompanyName []CompanyNameParameters `json:"companyName,omitempty" tf:"company_name,omitempty"`

	// +kubebuilder:validation:Optional
	ComplianceStatus []ComplianceStatusParameters `json:"complianceStatus,omitempty" tf:"compliance_status,omitempty"`

	// +kubebuilder:validation:Optional
	Confidence []ConfidenceParameters `json:"confidence,omitempty" tf:"confidence,omitempty"`

	// +kubebuilder:validation:Optional
	CreatedAt []CreatedAtParameters `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// +kubebuilder:validation:Optional
	Criticality []CriticalityParameters `json:"criticality,omitempty" tf:"criticality,omitempty"`

	// +kubebuilder:validation:Optional
	Description []DescriptionParameters `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsConfidence []FindingProviderFieldsConfidenceParameters `json:"findingProviderFieldsConfidence,omitempty" tf:"finding_provider_fields_confidence,omitempty"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsCriticality []FindingProviderFieldsCriticalityParameters `json:"findingProviderFieldsCriticality,omitempty" tf:"finding_provider_fields_criticality,omitempty"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsRelatedFindingsID []FindingProviderFieldsRelatedFindingsIDParameters `json:"findingProviderFieldsRelatedFindingsId,omitempty" tf:"finding_provider_fields_related_findings_id,omitempty"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsRelatedFindingsProductArn []FindingProviderFieldsRelatedFindingsProductArnParameters `json:"findingProviderFieldsRelatedFindingsProductArn,omitempty" tf:"finding_provider_fields_related_findings_product_arn,omitempty"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsSeverityLabel []FindingProviderFieldsSeverityLabelParameters `json:"findingProviderFieldsSeverityLabel,omitempty" tf:"finding_provider_fields_severity_label,omitempty"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsSeverityOriginal []FindingProviderFieldsSeverityOriginalParameters `json:"findingProviderFieldsSeverityOriginal,omitempty" tf:"finding_provider_fields_severity_original,omitempty"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsTypes []FindingProviderFieldsTypesParameters `json:"findingProviderFieldsTypes,omitempty" tf:"finding_provider_fields_types,omitempty"`

	// +kubebuilder:validation:Optional
	FirstObservedAt []FirstObservedAtParameters `json:"firstObservedAt,omitempty" tf:"first_observed_at,omitempty"`

	// +kubebuilder:validation:Optional
	GeneratorID []GeneratorIDParameters `json:"generatorId,omitempty" tf:"generator_id,omitempty"`

	// +kubebuilder:validation:Optional
	ID []IDParameters `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:Optional
	Keyword []KeywordParameters `json:"keyword,omitempty" tf:"keyword,omitempty"`

	// +kubebuilder:validation:Optional
	LastObservedAt []LastObservedAtParameters `json:"lastObservedAt,omitempty" tf:"last_observed_at,omitempty"`

	// +kubebuilder:validation:Optional
	MalwareName []MalwareNameParameters `json:"malwareName,omitempty" tf:"malware_name,omitempty"`

	// +kubebuilder:validation:Optional
	MalwarePath []MalwarePathParameters `json:"malwarePath,omitempty" tf:"malware_path,omitempty"`

	// +kubebuilder:validation:Optional
	MalwareState []MalwareStateParameters `json:"malwareState,omitempty" tf:"malware_state,omitempty"`

	// +kubebuilder:validation:Optional
	MalwareType []MalwareTypeParameters `json:"malwareType,omitempty" tf:"malware_type,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkDestinationDomain []NetworkDestinationDomainParameters `json:"networkDestinationDomain,omitempty" tf:"network_destination_domain,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkDestinationIPv4 []NetworkDestinationIPv4Parameters `json:"networkDestinationIpv4,omitempty" tf:"network_destination_ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkDestinationIPv6 []NetworkDestinationIPv6Parameters `json:"networkDestinationIpv6,omitempty" tf:"network_destination_ipv6,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkDestinationPort []NetworkDestinationPortParameters `json:"networkDestinationPort,omitempty" tf:"network_destination_port,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkDirection []NetworkDirectionParameters `json:"networkDirection,omitempty" tf:"network_direction,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkProtocol []NetworkProtocolParameters `json:"networkProtocol,omitempty" tf:"network_protocol,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkSourceDomain []NetworkSourceDomainParameters `json:"networkSourceDomain,omitempty" tf:"network_source_domain,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkSourceIPv4 []NetworkSourceIPv4Parameters `json:"networkSourceIpv4,omitempty" tf:"network_source_ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkSourceIPv6 []NetworkSourceIPv6Parameters `json:"networkSourceIpv6,omitempty" tf:"network_source_ipv6,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkSourceMac []NetworkSourceMacParameters `json:"networkSourceMac,omitempty" tf:"network_source_mac,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkSourcePort []NetworkSourcePortParameters `json:"networkSourcePort,omitempty" tf:"network_source_port,omitempty"`

	// +kubebuilder:validation:Optional
	NoteText []NoteTextParameters `json:"noteText,omitempty" tf:"note_text,omitempty"`

	// +kubebuilder:validation:Optional
	NoteUpdatedAt []NoteUpdatedAtParameters `json:"noteUpdatedAt,omitempty" tf:"note_updated_at,omitempty"`

	// +kubebuilder:validation:Optional
	NoteUpdatedBy []NoteUpdatedByParameters `json:"noteUpdatedBy,omitempty" tf:"note_updated_by,omitempty"`

	// +kubebuilder:validation:Optional
	ProcessLaunchedAt []ProcessLaunchedAtParameters `json:"processLaunchedAt,omitempty" tf:"process_launched_at,omitempty"`

	// +kubebuilder:validation:Optional
	ProcessName []ProcessNameParameters `json:"processName,omitempty" tf:"process_name,omitempty"`

	// +kubebuilder:validation:Optional
	ProcessParentPid []ProcessParentPidParameters `json:"processParentPid,omitempty" tf:"process_parent_pid,omitempty"`

	// +kubebuilder:validation:Optional
	ProcessPath []ProcessPathParameters `json:"processPath,omitempty" tf:"process_path,omitempty"`

	// +kubebuilder:validation:Optional
	ProcessPid []ProcessPidParameters `json:"processPid,omitempty" tf:"process_pid,omitempty"`

	// +kubebuilder:validation:Optional
	ProcessTerminatedAt []ProcessTerminatedAtParameters `json:"processTerminatedAt,omitempty" tf:"process_terminated_at,omitempty"`

	// +kubebuilder:validation:Optional
	ProductArn []ProductArnParameters `json:"productArn,omitempty" tf:"product_arn,omitempty"`

	// +kubebuilder:validation:Optional
	ProductFields []ProductFieldsParameters `json:"productFields,omitempty" tf:"product_fields,omitempty"`

	// +kubebuilder:validation:Optional
	ProductName []ProductNameParameters `json:"productName,omitempty" tf:"product_name,omitempty"`

	// +kubebuilder:validation:Optional
	RecommendationText []RecommendationTextParameters `json:"recommendationText,omitempty" tf:"recommendation_text,omitempty"`

	// +kubebuilder:validation:Optional
	RecordState []RecordStateParameters `json:"recordState,omitempty" tf:"record_state,omitempty"`

	// +kubebuilder:validation:Optional
	RelatedFindingsID []RelatedFindingsIDParameters `json:"relatedFindingsId,omitempty" tf:"related_findings_id,omitempty"`

	// +kubebuilder:validation:Optional
	RelatedFindingsProductArn []RelatedFindingsProductArnParameters `json:"relatedFindingsProductArn,omitempty" tf:"related_findings_product_arn,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceIPv4Addresses []ResourceAwsEc2InstanceIPv4AddressesParameters `json:"resourceAwsEc2InstanceIpv4Addresses,omitempty" tf:"resource_aws_ec2_instance_ipv4_addresses,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceIPv6Addresses []ResourceAwsEc2InstanceIPv6AddressesParameters `json:"resourceAwsEc2InstanceIpv6Addresses,omitempty" tf:"resource_aws_ec2_instance_ipv6_addresses,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceIamInstanceProfileArn []ResourceAwsEc2InstanceIamInstanceProfileArnParameters `json:"resourceAwsEc2InstanceIamInstanceProfileArn,omitempty" tf:"resource_aws_ec2_instance_iam_instance_profile_arn,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceImageID []ResourceAwsEc2InstanceImageIDParameters `json:"resourceAwsEc2InstanceImageId,omitempty" tf:"resource_aws_ec2_instance_image_id,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceKeyName []ResourceAwsEc2InstanceKeyNameParameters `json:"resourceAwsEc2InstanceKeyName,omitempty" tf:"resource_aws_ec2_instance_key_name,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceLaunchedAt []ResourceAwsEc2InstanceLaunchedAtParameters `json:"resourceAwsEc2InstanceLaunchedAt,omitempty" tf:"resource_aws_ec2_instance_launched_at,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceSubnetID []ResourceAwsEc2InstanceSubnetIDParameters `json:"resourceAwsEc2InstanceSubnetId,omitempty" tf:"resource_aws_ec2_instance_subnet_id,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceType []ResourceAwsEc2InstanceTypeParameters `json:"resourceAwsEc2InstanceType,omitempty" tf:"resource_aws_ec2_instance_type,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceVpcID []ResourceAwsEc2InstanceVpcIDParameters `json:"resourceAwsEc2InstanceVpcId,omitempty" tf:"resource_aws_ec2_instance_vpc_id,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsIamAccessKeyCreatedAt []ResourceAwsIamAccessKeyCreatedAtParameters `json:"resourceAwsIamAccessKeyCreatedAt,omitempty" tf:"resource_aws_iam_access_key_created_at,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsIamAccessKeyStatus []ResourceAwsIamAccessKeyStatusParameters `json:"resourceAwsIamAccessKeyStatus,omitempty" tf:"resource_aws_iam_access_key_status,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsIamAccessKeyUserName []ResourceAwsIamAccessKeyUserNameParameters `json:"resourceAwsIamAccessKeyUserName,omitempty" tf:"resource_aws_iam_access_key_user_name,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsS3BucketOwnerID []ResourceAwsS3BucketOwnerIDParameters `json:"resourceAwsS3BucketOwnerId,omitempty" tf:"resource_aws_s3_bucket_owner_id,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceAwsS3BucketOwnerName []ResourceAwsS3BucketOwnerNameParameters `json:"resourceAwsS3BucketOwnerName,omitempty" tf:"resource_aws_s3_bucket_owner_name,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceContainerImageID []ResourceContainerImageIDParameters `json:"resourceContainerImageId,omitempty" tf:"resource_container_image_id,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceContainerImageName []ResourceContainerImageNameParameters `json:"resourceContainerImageName,omitempty" tf:"resource_container_image_name,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceContainerLaunchedAt []ResourceContainerLaunchedAtParameters `json:"resourceContainerLaunchedAt,omitempty" tf:"resource_container_launched_at,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceContainerName []ResourceContainerNameParameters `json:"resourceContainerName,omitempty" tf:"resource_container_name,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceDetailsOther []ResourceDetailsOtherParameters `json:"resourceDetailsOther,omitempty" tf:"resource_details_other,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceID []ResourceIDParameters `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// +kubebuilder:validation:Optional
	ResourcePartition []ResourcePartitionParameters `json:"resourcePartition,omitempty" tf:"resource_partition,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceRegion []ResourceRegionParameters `json:"resourceRegion,omitempty" tf:"resource_region,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceTags []ResourceTagsParameters `json:"resourceTags,omitempty" tf:"resource_tags,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceType []ResourceTypeParameters `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// +kubebuilder:validation:Optional
	SeverityLabel []SeverityLabelParameters `json:"severityLabel,omitempty" tf:"severity_label,omitempty"`

	// +kubebuilder:validation:Optional
	SourceURL []SourceURLParameters `json:"sourceUrl,omitempty" tf:"source_url,omitempty"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorCategory []ThreatIntelIndicatorCategoryParameters `json:"threatIntelIndicatorCategory,omitempty" tf:"threat_intel_indicator_category,omitempty"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorLastObservedAt []ThreatIntelIndicatorLastObservedAtParameters `json:"threatIntelIndicatorLastObservedAt,omitempty" tf:"threat_intel_indicator_last_observed_at,omitempty"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorSource []ThreatIntelIndicatorSourceParameters `json:"threatIntelIndicatorSource,omitempty" tf:"threat_intel_indicator_source,omitempty"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorSourceURL []ThreatIntelIndicatorSourceURLParameters `json:"threatIntelIndicatorSourceUrl,omitempty" tf:"threat_intel_indicator_source_url,omitempty"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorType []ThreatIntelIndicatorTypeParameters `json:"threatIntelIndicatorType,omitempty" tf:"threat_intel_indicator_type,omitempty"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorValue []ThreatIntelIndicatorValueParameters `json:"threatIntelIndicatorValue,omitempty" tf:"threat_intel_indicator_value,omitempty"`

	// +kubebuilder:validation:Optional
	Title []TitleParameters `json:"title,omitempty" tf:"title,omitempty"`

	// +kubebuilder:validation:Optional
	Type []TypeParameters `json:"type,omitempty" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	UpdatedAt []UpdatedAtParameters `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// +kubebuilder:validation:Optional
	UserDefinedValues []UserDefinedValuesParameters `json:"userDefinedValues,omitempty" tf:"user_defined_values,omitempty"`

	// +kubebuilder:validation:Optional
	VerificationState []VerificationStateParameters `json:"verificationState,omitempty" tf:"verification_state,omitempty"`

	// +kubebuilder:validation:Optional
	WorkflowStatus []WorkflowStatusParameters `json:"workflowStatus,omitempty" tf:"workflow_status,omitempty"`
}

type FindingProviderFieldsConfidenceObservation struct {
}

type FindingProviderFieldsConfidenceParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type FindingProviderFieldsCriticalityObservation struct {
}

type FindingProviderFieldsCriticalityParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type FindingProviderFieldsRelatedFindingsIDObservation struct {
}

type FindingProviderFieldsRelatedFindingsIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type FindingProviderFieldsRelatedFindingsProductArnObservation struct {
}

type FindingProviderFieldsRelatedFindingsProductArnParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type FindingProviderFieldsSeverityLabelObservation struct {
}

type FindingProviderFieldsSeverityLabelParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type FindingProviderFieldsSeverityOriginalObservation struct {
}

type FindingProviderFieldsSeverityOriginalParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type FindingProviderFieldsTypesObservation struct {
}

type FindingProviderFieldsTypesParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type FirstObservedAtDateRangeObservation struct {
}

type FirstObservedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// +kubebuilder:validation:Required
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type FirstObservedAtObservation struct {
}

type FirstObservedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []FirstObservedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type GeneratorIDObservation struct {
}

type GeneratorIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type IDObservation struct {
}

type IDParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type InsightObservation struct {
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`
}

type InsightParameters struct {

	// +kubebuilder:validation:Required
	Filters []FiltersParameters `json:"filters" tf:"filters,omitempty"`

	// +kubebuilder:validation:Required
	GroupByAttribute *string `json:"groupByAttribute" tf:"group_by_attribute,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`
}

type KeywordObservation struct {
}

type KeywordParameters struct {

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type LastObservedAtDateRangeObservation struct {
}

type LastObservedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// +kubebuilder:validation:Required
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type LastObservedAtObservation struct {
}

type LastObservedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []LastObservedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type MalwareNameObservation struct {
}

type MalwareNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type MalwarePathObservation struct {
}

type MalwarePathParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type MalwareStateObservation struct {
}

type MalwareStateParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type MalwareTypeObservation struct {
}

type MalwareTypeParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkDestinationDomainObservation struct {
}

type NetworkDestinationDomainParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkDestinationIPv4Observation struct {
}

type NetworkDestinationIPv4Parameters struct {

	// +kubebuilder:validation:Required
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type NetworkDestinationIPv6Observation struct {
}

type NetworkDestinationIPv6Parameters struct {

	// +kubebuilder:validation:Required
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type NetworkDestinationPortObservation struct {
}

type NetworkDestinationPortParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type NetworkDirectionObservation struct {
}

type NetworkDirectionParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkProtocolObservation struct {
}

type NetworkProtocolParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkSourceDomainObservation struct {
}

type NetworkSourceDomainParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkSourceIPv4Observation struct {
}

type NetworkSourceIPv4Parameters struct {

	// +kubebuilder:validation:Required
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type NetworkSourceIPv6Observation struct {
}

type NetworkSourceIPv6Parameters struct {

	// +kubebuilder:validation:Required
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type NetworkSourceMacObservation struct {
}

type NetworkSourceMacParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkSourcePortObservation struct {
}

type NetworkSourcePortParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type NoteTextObservation struct {
}

type NoteTextParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type NoteUpdatedAtDateRangeObservation struct {
}

type NoteUpdatedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// +kubebuilder:validation:Required
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type NoteUpdatedAtObservation struct {
}

type NoteUpdatedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []NoteUpdatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type NoteUpdatedByObservation struct {
}

type NoteUpdatedByParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProcessLaunchedAtDateRangeObservation struct {
}

type ProcessLaunchedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// +kubebuilder:validation:Required
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ProcessLaunchedAtObservation struct {
}

type ProcessLaunchedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ProcessLaunchedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ProcessNameObservation struct {
}

type ProcessNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProcessParentPidObservation struct {
}

type ProcessParentPidParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type ProcessPathObservation struct {
}

type ProcessPathParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProcessPidObservation struct {
}

type ProcessPidParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type ProcessTerminatedAtDateRangeObservation struct {
}

type ProcessTerminatedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// +kubebuilder:validation:Required
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ProcessTerminatedAtObservation struct {
}

type ProcessTerminatedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ProcessTerminatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ProductArnObservation struct {
}

type ProductArnParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProductFieldsObservation struct {
}

type ProductFieldsParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProductNameObservation struct {
}

type ProductNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type RecommendationTextObservation struct {
}

type RecommendationTextParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type RecordStateObservation struct {
}

type RecordStateParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type RelatedFindingsIDObservation struct {
}

type RelatedFindingsIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type RelatedFindingsProductArnObservation struct {
}

type RelatedFindingsProductArnParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEc2InstanceIPv4AddressesObservation struct {
}

type ResourceAwsEc2InstanceIPv4AddressesParameters struct {

	// +kubebuilder:validation:Required
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type ResourceAwsEc2InstanceIPv6AddressesObservation struct {
}

type ResourceAwsEc2InstanceIPv6AddressesParameters struct {

	// +kubebuilder:validation:Required
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type ResourceAwsEc2InstanceIamInstanceProfileArnObservation struct {
}

type ResourceAwsEc2InstanceIamInstanceProfileArnParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEc2InstanceImageIDObservation struct {
}

type ResourceAwsEc2InstanceImageIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEc2InstanceKeyNameObservation struct {
}

type ResourceAwsEc2InstanceKeyNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEc2InstanceLaunchedAtDateRangeObservation struct {
}

type ResourceAwsEc2InstanceLaunchedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// +kubebuilder:validation:Required
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEc2InstanceLaunchedAtObservation struct {
}

type ResourceAwsEc2InstanceLaunchedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ResourceAwsEc2InstanceLaunchedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceAwsEc2InstanceSubnetIDObservation struct {
}

type ResourceAwsEc2InstanceSubnetIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEc2InstanceTypeObservation struct {
}

type ResourceAwsEc2InstanceTypeParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEc2InstanceVpcIDObservation struct {
}

type ResourceAwsEc2InstanceVpcIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsIamAccessKeyCreatedAtDateRangeObservation struct {
}

type ResourceAwsIamAccessKeyCreatedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// +kubebuilder:validation:Required
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ResourceAwsIamAccessKeyCreatedAtObservation struct {
}

type ResourceAwsIamAccessKeyCreatedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ResourceAwsIamAccessKeyCreatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceAwsIamAccessKeyStatusObservation struct {
}

type ResourceAwsIamAccessKeyStatusParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsIamAccessKeyUserNameObservation struct {
}

type ResourceAwsIamAccessKeyUserNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsS3BucketOwnerIDObservation struct {
}

type ResourceAwsS3BucketOwnerIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsS3BucketOwnerNameObservation struct {
}

type ResourceAwsS3BucketOwnerNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceContainerImageIDObservation struct {
}

type ResourceContainerImageIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceContainerImageNameObservation struct {
}

type ResourceContainerImageNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceContainerLaunchedAtDateRangeObservation struct {
}

type ResourceContainerLaunchedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// +kubebuilder:validation:Required
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ResourceContainerLaunchedAtObservation struct {
}

type ResourceContainerLaunchedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ResourceContainerLaunchedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceContainerNameObservation struct {
}

type ResourceContainerNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceDetailsOtherObservation struct {
}

type ResourceDetailsOtherParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceIDObservation struct {
}

type ResourceIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourcePartitionObservation struct {
}

type ResourcePartitionParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceRegionObservation struct {
}

type ResourceRegionParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceTagsObservation struct {
}

type ResourceTagsParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceTypeObservation struct {
}

type ResourceTypeParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type SeverityLabelObservation struct {
}

type SeverityLabelParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type SourceURLObservation struct {
}

type SourceURLParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorCategoryObservation struct {
}

type ThreatIntelIndicatorCategoryParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorLastObservedAtDateRangeObservation struct {
}

type ThreatIntelIndicatorLastObservedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// +kubebuilder:validation:Required
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorLastObservedAtObservation struct {
}

type ThreatIntelIndicatorLastObservedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ThreatIntelIndicatorLastObservedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ThreatIntelIndicatorSourceObservation struct {
}

type ThreatIntelIndicatorSourceParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorSourceURLObservation struct {
}

type ThreatIntelIndicatorSourceURLParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorTypeObservation struct {
}

type ThreatIntelIndicatorTypeParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorValueObservation struct {
}

type ThreatIntelIndicatorValueParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type TitleObservation struct {
}

type TitleParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type TypeObservation struct {
}

type TypeParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type UpdatedAtDateRangeObservation struct {
}

type UpdatedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// +kubebuilder:validation:Required
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type UpdatedAtObservation struct {
}

type UpdatedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []UpdatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type UserDefinedValuesObservation struct {
}

type UserDefinedValuesParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type VerificationStateObservation struct {
}

type VerificationStateParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type WorkflowStatusObservation struct {
}

type WorkflowStatusParameters struct {

	// +kubebuilder:validation:Required
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

// InsightSpec defines the desired state of Insight
type InsightSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InsightParameters `json:"forProvider"`
}

// InsightStatus defines the observed state of Insight.
type InsightStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InsightObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Insight is the Schema for the Insights API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type Insight struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InsightSpec   `json:"spec"`
	Status            InsightStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InsightList contains a list of Insights
type InsightList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Insight `json:"items"`
}

// Repository type metadata.
var (
	InsightKind             = "Insight"
	InsightGroupKind        = schema.GroupKind{Group: Group, Kind: InsightKind}.String()
	InsightKindAPIVersion   = InsightKind + "." + GroupVersion.String()
	InsightGroupVersionKind = GroupVersion.WithKind(InsightKind)
)

func init() {
	SchemeBuilder.Register(&Insight{}, &InsightList{})
}
