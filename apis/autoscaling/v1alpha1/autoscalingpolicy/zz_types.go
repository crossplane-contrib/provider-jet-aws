/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=autoscaling.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/autoscaling/v1alpha1"
)

type AutoscalingPolicyObservation struct {
	Arn string `json:"arn" tf:"arn"`
}

type AutoscalingPolicyParameters struct {
	AdjustmentType *string `json:"adjustmentType,omitempty" tf:"adjustment_type"`

	AutoscalingGroupName string `json:"autoscalingGroupName" tf:"autoscaling_group_name"`

	Cooldown *int64 `json:"cooldown,omitempty" tf:"cooldown"`

	EstimatedInstanceWarmup *int64 `json:"estimatedInstanceWarmup,omitempty" tf:"estimated_instance_warmup"`

	MetricAggregationType *string `json:"metricAggregationType,omitempty" tf:"metric_aggregation_type"`

	MinAdjustmentMagnitude *int64 `json:"minAdjustmentMagnitude,omitempty" tf:"min_adjustment_magnitude"`

	Name string `json:"name" tf:"name"`

	PolicyType *string `json:"policyType,omitempty" tf:"policy_type"`

	PredictiveScalingConfiguration []PredictiveScalingConfigurationParameters `json:"predictiveScalingConfiguration,omitempty" tf:"predictive_scaling_configuration"`

	ScalingAdjustment *int64 `json:"scalingAdjustment,omitempty" tf:"scaling_adjustment"`

	StepAdjustment []StepAdjustmentParameters `json:"stepAdjustment,omitempty" tf:"step_adjustment"`

	TargetTrackingConfiguration []TargetTrackingConfigurationParameters `json:"targetTrackingConfiguration,omitempty" tf:"target_tracking_configuration"`
}

type CustomizedMetricSpecificationObservation struct {
}

type CustomizedMetricSpecificationParameters struct {
	MetricDimension []MetricDimensionParameters `json:"metricDimension,omitempty" tf:"metric_dimension"`

	MetricName string `json:"metricName" tf:"metric_name"`

	Namespace string `json:"namespace" tf:"namespace"`

	Statistic string `json:"statistic" tf:"statistic"`

	Unit *string `json:"unit,omitempty" tf:"unit"`
}

type MetricDimensionObservation struct {
}

type MetricDimensionParameters struct {
	Name string `json:"name" tf:"name"`

	Value string `json:"value" tf:"value"`
}

type MetricSpecificationObservation struct {
}

type MetricSpecificationParameters struct {
	PredefinedLoadMetricSpecification []PredefinedLoadMetricSpecificationParameters `json:"predefinedLoadMetricSpecification,omitempty" tf:"predefined_load_metric_specification"`

	PredefinedMetricPairSpecification []PredefinedMetricPairSpecificationParameters `json:"predefinedMetricPairSpecification,omitempty" tf:"predefined_metric_pair_specification"`

	PredefinedScalingMetricSpecification []PredefinedScalingMetricSpecificationParameters `json:"predefinedScalingMetricSpecification,omitempty" tf:"predefined_scaling_metric_specification"`

	TargetValue int64 `json:"targetValue" tf:"target_value"`
}

type PredefinedLoadMetricSpecificationObservation struct {
}

type PredefinedLoadMetricSpecificationParameters struct {
	PredefinedMetricType string `json:"predefinedMetricType" tf:"predefined_metric_type"`

	ResourceLabel string `json:"resourceLabel" tf:"resource_label"`
}

type PredefinedMetricPairSpecificationObservation struct {
}

type PredefinedMetricPairSpecificationParameters struct {
	PredefinedMetricType string `json:"predefinedMetricType" tf:"predefined_metric_type"`

	ResourceLabel string `json:"resourceLabel" tf:"resource_label"`
}

type PredefinedMetricSpecificationObservation struct {
}

type PredefinedMetricSpecificationParameters struct {
	PredefinedMetricType string `json:"predefinedMetricType" tf:"predefined_metric_type"`

	ResourceLabel *string `json:"resourceLabel,omitempty" tf:"resource_label"`
}

type PredefinedScalingMetricSpecificationObservation struct {
}

type PredefinedScalingMetricSpecificationParameters struct {
	PredefinedMetricType string `json:"predefinedMetricType" tf:"predefined_metric_type"`

	ResourceLabel string `json:"resourceLabel" tf:"resource_label"`
}

type PredictiveScalingConfigurationObservation struct {
}

type PredictiveScalingConfigurationParameters struct {
	MaxCapacityBreachBehavior *string `json:"maxCapacityBreachBehavior,omitempty" tf:"max_capacity_breach_behavior"`

	MaxCapacityBuffer *string `json:"maxCapacityBuffer,omitempty" tf:"max_capacity_buffer"`

	MetricSpecification []MetricSpecificationParameters `json:"metricSpecification" tf:"metric_specification"`

	Mode *string `json:"mode,omitempty" tf:"mode"`

	SchedulingBufferTime *string `json:"schedulingBufferTime,omitempty" tf:"scheduling_buffer_time"`
}

type StepAdjustmentObservation struct {
}

type StepAdjustmentParameters struct {
	MetricIntervalLowerBound *string `json:"metricIntervalLowerBound,omitempty" tf:"metric_interval_lower_bound"`

	MetricIntervalUpperBound *string `json:"metricIntervalUpperBound,omitempty" tf:"metric_interval_upper_bound"`

	ScalingAdjustment int64 `json:"scalingAdjustment" tf:"scaling_adjustment"`
}

type TargetTrackingConfigurationObservation struct {
}

type TargetTrackingConfigurationParameters struct {
	CustomizedMetricSpecification []CustomizedMetricSpecificationParameters `json:"customizedMetricSpecification,omitempty" tf:"customized_metric_specification"`

	DisableScaleIn *bool `json:"disableScaleIn,omitempty" tf:"disable_scale_in"`

	PredefinedMetricSpecification []PredefinedMetricSpecificationParameters `json:"predefinedMetricSpecification,omitempty" tf:"predefined_metric_specification"`

	TargetValue float64 `json:"targetValue" tf:"target_value"`
}

// AutoscalingPolicySpec defines the desired state of AutoscalingPolicy
type AutoscalingPolicySpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       AutoscalingPolicyParameters `json:"forProvider"`
}

// AutoscalingPolicyStatus defines the observed state of AutoscalingPolicy.
type AutoscalingPolicyStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          AutoscalingPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AutoscalingPolicy is the Schema for the AutoscalingPolicys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type AutoscalingPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AutoscalingPolicySpec   `json:"spec"`
	Status            AutoscalingPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AutoscalingPolicyList contains a list of AutoscalingPolicys
type AutoscalingPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AutoscalingPolicy `json:"items"`
}

// Repository type metadata.
var (
	AutoscalingPolicyKind             = "AutoscalingPolicy"
	AutoscalingPolicyGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: AutoscalingPolicyKind}.String()
	AutoscalingPolicyKindAPIVersion   = AutoscalingPolicyKind + "." + v1alpha1.GroupVersion.String()
	AutoscalingPolicyGroupVersionKind = v1alpha1.GroupVersion.WithKind(AutoscalingPolicyKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&AutoscalingPolicy{}, &AutoscalingPolicyList{})
}
