/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=api.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/api/v1alpha1"
)

type ApiGatewayDocumentationPartObservation struct {
}

type ApiGatewayDocumentationPartParameters struct {
	Location []LocationParameters `json:"location" tf:"location"`

	Properties string `json:"properties" tf:"properties"`

	RestApiId string `json:"restApiId" tf:"rest_api_id"`
}

type LocationObservation struct {
}

type LocationParameters struct {
	Method *string `json:"method,omitempty" tf:"method"`

	Name *string `json:"name,omitempty" tf:"name"`

	Path *string `json:"path,omitempty" tf:"path"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code"`

	Type string `json:"type" tf:"type"`
}

// ApiGatewayDocumentationPartSpec defines the desired state of ApiGatewayDocumentationPart
type ApiGatewayDocumentationPartSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ApiGatewayDocumentationPartParameters `json:"forProvider"`
}

// ApiGatewayDocumentationPartStatus defines the observed state of ApiGatewayDocumentationPart.
type ApiGatewayDocumentationPartStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ApiGatewayDocumentationPartObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ApiGatewayDocumentationPart is the Schema for the ApiGatewayDocumentationParts API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type ApiGatewayDocumentationPart struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApiGatewayDocumentationPartSpec   `json:"spec"`
	Status            ApiGatewayDocumentationPartStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApiGatewayDocumentationPartList contains a list of ApiGatewayDocumentationParts
type ApiGatewayDocumentationPartList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApiGatewayDocumentationPart `json:"items"`
}

// Repository type metadata.
var (
	ApiGatewayDocumentationPartKind             = "ApiGatewayDocumentationPart"
	ApiGatewayDocumentationPartGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: ApiGatewayDocumentationPartKind}.String()
	ApiGatewayDocumentationPartKindAPIVersion   = ApiGatewayDocumentationPartKind + "." + v1alpha1.GroupVersion.String()
	ApiGatewayDocumentationPartGroupVersionKind = v1alpha1.GroupVersion.WithKind(ApiGatewayDocumentationPartKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&ApiGatewayDocumentationPart{}, &ApiGatewayDocumentationPartList{})
}
