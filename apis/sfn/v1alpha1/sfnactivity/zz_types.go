/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=sfn.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/sfn/v1alpha1"
)

type SfnActivityObservation struct {
	CreationDate string `json:"creationDate" tf:"creation_date"`
}

type SfnActivityParameters struct {
	Name string `json:"name" tf:"name"`

	Tags map[string]string `json:"tags,omitempty" tf:"tags"`

	TagsAll map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`
}

// SfnActivitySpec defines the desired state of SfnActivity
type SfnActivitySpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       SfnActivityParameters `json:"forProvider"`
}

// SfnActivityStatus defines the observed state of SfnActivity.
type SfnActivityStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          SfnActivityObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SfnActivity is the Schema for the SfnActivitys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type SfnActivity struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SfnActivitySpec   `json:"spec"`
	Status            SfnActivityStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SfnActivityList contains a list of SfnActivitys
type SfnActivityList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SfnActivity `json:"items"`
}

// Repository type metadata.
var (
	SfnActivityKind             = "SfnActivity"
	SfnActivityGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: SfnActivityKind}.String()
	SfnActivityKindAPIVersion   = SfnActivityKind + "." + v1alpha1.GroupVersion.String()
	SfnActivityGroupVersionKind = v1alpha1.GroupVersion.WithKind(SfnActivityKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&SfnActivity{}, &SfnActivityList{})
}
