/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type AppautoscalingScheduledActionObservation struct {
	ARN string `json:"arn" tf:"arn"`
}

type AppautoscalingScheduledActionParameters struct {
	EndTime *string `json:"endTime,omitempty" tf:"end_time"`

	Name string `json:"name" tf:"name"`

	ResourceID string `json:"resourceID" tf:"resource_id"`

	ScalableDimension string `json:"scalableDimension" tf:"scalable_dimension"`

	ScalableTargetAction []ScalableTargetActionParameters `json:"scalableTargetAction" tf:"scalable_target_action"`

	Schedule string `json:"schedule" tf:"schedule"`

	ServiceNamespace string `json:"serviceNamespace" tf:"service_namespace"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time"`

	Timezone *string `json:"timezone,omitempty" tf:"timezone"`
}

type ScalableTargetActionObservation struct {
}

type ScalableTargetActionParameters struct {
	MaxCapacity *string `json:"maxCapacity,omitempty" tf:"max_capacity"`

	MinCapacity *string `json:"minCapacity,omitempty" tf:"min_capacity"`
}

// AppautoscalingScheduledActionSpec defines the desired state of AppautoscalingScheduledAction
type AppautoscalingScheduledActionSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       AppautoscalingScheduledActionParameters `json:"forProvider"`
}

// AppautoscalingScheduledActionStatus defines the observed state of AppautoscalingScheduledAction.
type AppautoscalingScheduledActionStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          AppautoscalingScheduledActionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AppautoscalingScheduledAction is the Schema for the AppautoscalingScheduledActions API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type AppautoscalingScheduledAction struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppautoscalingScheduledActionSpec   `json:"spec"`
	Status            AppautoscalingScheduledActionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppautoscalingScheduledActionList contains a list of AppautoscalingScheduledActions
type AppautoscalingScheduledActionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppautoscalingScheduledAction `json:"items"`
}

// Repository type metadata.
var (
	AppautoscalingScheduledActionKind             = "AppautoscalingScheduledAction"
	AppautoscalingScheduledActionGroupKind        = schema.GroupKind{Group: Group, Kind: AppautoscalingScheduledActionKind}.String()
	AppautoscalingScheduledActionKindAPIVersion   = AppautoscalingScheduledActionKind + "." + GroupVersion.String()
	AppautoscalingScheduledActionGroupVersionKind = GroupVersion.WithKind(AppautoscalingScheduledActionKind)
)

func init() {
	SchemeBuilder.Register(&AppautoscalingScheduledAction{}, &AppautoscalingScheduledActionList{})
}
