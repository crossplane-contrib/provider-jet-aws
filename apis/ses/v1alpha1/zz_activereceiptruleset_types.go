/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActiveReceiptRuleSetObservation struct {
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`
}

type ActiveReceiptRuleSetParameters struct {

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// +kubebuilder:validation:Required
	RuleSetName *string `json:"ruleSetName" tf:"rule_set_name,omitempty"`
}

// ActiveReceiptRuleSetSpec defines the desired state of ActiveReceiptRuleSet
type ActiveReceiptRuleSetSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ActiveReceiptRuleSetParameters `json:"forProvider"`
}

// ActiveReceiptRuleSetStatus defines the observed state of ActiveReceiptRuleSet.
type ActiveReceiptRuleSetStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ActiveReceiptRuleSetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ActiveReceiptRuleSet is the Schema for the ActiveReceiptRuleSets API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type ActiveReceiptRuleSet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ActiveReceiptRuleSetSpec   `json:"spec"`
	Status            ActiveReceiptRuleSetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ActiveReceiptRuleSetList contains a list of ActiveReceiptRuleSets
type ActiveReceiptRuleSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ActiveReceiptRuleSet `json:"items"`
}

// Repository type metadata.
var (
	ActiveReceiptRuleSetKind             = "ActiveReceiptRuleSet"
	ActiveReceiptRuleSetGroupKind        = schema.GroupKind{Group: Group, Kind: ActiveReceiptRuleSetKind}.String()
	ActiveReceiptRuleSetKindAPIVersion   = ActiveReceiptRuleSetKind + "." + GroupVersion.String()
	ActiveReceiptRuleSetGroupVersionKind = GroupVersion.WithKind(ActiveReceiptRuleSetKind)
)

func init() {
	SchemeBuilder.Register(&ActiveReceiptRuleSet{}, &ActiveReceiptRuleSetList{})
}
