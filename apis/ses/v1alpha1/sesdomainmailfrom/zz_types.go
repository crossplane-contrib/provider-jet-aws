/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=ses.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/ses/v1alpha1"
)

type SesDomainMailFromObservation struct {
}

type SesDomainMailFromParameters struct {
	BehaviorOnMxFailure *string `json:"behaviorOnMxFailure,omitempty" tf:"behavior_on_mx_failure"`

	Domain string `json:"domain" tf:"domain"`

	MailFromDomain string `json:"mailFromDomain" tf:"mail_from_domain"`
}

// SesDomainMailFromSpec defines the desired state of SesDomainMailFrom
type SesDomainMailFromSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       SesDomainMailFromParameters `json:"forProvider"`
}

// SesDomainMailFromStatus defines the observed state of SesDomainMailFrom.
type SesDomainMailFromStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          SesDomainMailFromObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SesDomainMailFrom is the Schema for the SesDomainMailFroms API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type SesDomainMailFrom struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SesDomainMailFromSpec   `json:"spec"`
	Status            SesDomainMailFromStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SesDomainMailFromList contains a list of SesDomainMailFroms
type SesDomainMailFromList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SesDomainMailFrom `json:"items"`
}

// Repository type metadata.
var (
	SesDomainMailFromKind             = "SesDomainMailFrom"
	SesDomainMailFromGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: SesDomainMailFromKind}.String()
	SesDomainMailFromKindAPIVersion   = SesDomainMailFromKind + "." + v1alpha1.GroupVersion.String()
	SesDomainMailFromGroupVersionKind = v1alpha1.GroupVersion.WithKind(SesDomainMailFromKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&SesDomainMailFrom{}, &SesDomainMailFromList{})
}
