/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionObservation struct {
}

type ActionParameters struct {

	// +kubebuilder:validation:Optional
	Allow []AllowParameters `json:"allow,omitempty" tf:"allow,omitempty"`

	// +kubebuilder:validation:Optional
	Block []BlockParameters `json:"block,omitempty" tf:"block,omitempty"`

	// +kubebuilder:validation:Optional
	Count []CountParameters `json:"count,omitempty" tf:"count,omitempty"`
}

type AllQueryArgumentsObservation struct {
}

type AllQueryArgumentsParameters struct {
}

type AllowObservation struct {
}

type AllowParameters struct {

	// +kubebuilder:validation:Optional
	CustomRequestHandling []CustomRequestHandlingParameters `json:"customRequestHandling,omitempty" tf:"custom_request_handling,omitempty"`
}

type AndStatementObservation struct {
}

type AndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementParameters `json:"statement" tf:"statement,omitempty"`
}

type AndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementByteMatchStatementObservation struct {
}

type AndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type AndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type AndStatementStatementGeoMatchStatementObservation struct {
}

type AndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []AndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type AndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type AndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type AndStatementStatementIPSetReferenceStatementObservation struct {
}

type AndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []AndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type AndStatementStatementObservation struct {
}

type AndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []AndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []AndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []AndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type AndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementSizeConstraintStatementObservation struct {
}

type AndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type AndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementSqliMatchStatementObservation struct {
}

type AndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementXSSMatchStatementObservation struct {
}

type AndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type BlockObservation struct {
}

type BlockParameters struct {

	// +kubebuilder:validation:Optional
	CustomResponse []CustomResponseParameters `json:"customResponse,omitempty" tf:"custom_response,omitempty"`
}

type BodyObservation struct {
}

type BodyParameters struct {
}

type ByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ByteMatchStatementFieldToMatchBodyObservation struct {
}

type ByteMatchStatementFieldToMatchBodyParameters struct {
}

type ByteMatchStatementFieldToMatchMethodObservation struct {
}

type ByteMatchStatementFieldToMatchMethodParameters struct {
}

type ByteMatchStatementFieldToMatchObservation struct {
}

type ByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ByteMatchStatementObservation struct {
}

type ByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []FieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []TextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ByteMatchStatementTextTransformationObservation struct {
}

type ByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type CountCustomRequestHandlingObservation struct {
}

type CountCustomRequestHandlingParameters struct {

	// +kubebuilder:validation:Required
	InsertHeader []CustomRequestHandlingInsertHeaderParameters `json:"insertHeader" tf:"insert_header,omitempty"`
}

type CountObservation struct {
}

type CountParameters struct {

	// +kubebuilder:validation:Optional
	CustomRequestHandling []CountCustomRequestHandlingParameters `json:"customRequestHandling,omitempty" tf:"custom_request_handling,omitempty"`
}

type CustomRequestHandlingInsertHeaderObservation struct {
}

type CustomRequestHandlingInsertHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type CustomRequestHandlingObservation struct {
}

type CustomRequestHandlingParameters struct {

	// +kubebuilder:validation:Required
	InsertHeader []InsertHeaderParameters `json:"insertHeader" tf:"insert_header,omitempty"`
}

type CustomResponseObservation struct {
}

type CustomResponseParameters struct {

	// +kubebuilder:validation:Required
	ResponseCode *int64 `json:"responseCode" tf:"response_code,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseHeader []ResponseHeaderParameters `json:"responseHeader,omitempty" tf:"response_header,omitempty"`
}

type FieldToMatchAllQueryArgumentsObservation struct {
}

type FieldToMatchAllQueryArgumentsParameters struct {
}

type FieldToMatchBodyObservation struct {
}

type FieldToMatchBodyParameters struct {
}

type FieldToMatchMethodObservation struct {
}

type FieldToMatchMethodParameters struct {
}

type FieldToMatchObservation struct {
}

type FieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []BodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []MethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []QueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []SingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []SingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []URIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type FieldToMatchQueryStringObservation struct {
}

type FieldToMatchQueryStringParameters struct {
}

type FieldToMatchSingleHeaderObservation struct {
}

type FieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type FieldToMatchSingleQueryArgumentObservation struct {
}

type FieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type FieldToMatchURIPathObservation struct {
}

type FieldToMatchURIPathParameters struct {
}

type ForwardedIPConfigObservation struct {
}

type ForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type GeoMatchStatementForwardedIPConfigObservation struct {
}

type GeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type GeoMatchStatementObservation struct {
}

type GeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type IPSetForwardedIPConfigObservation struct {
}

type IPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type IPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type IPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type IPSetReferenceStatementObservation struct {
}

type IPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []IPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type InsertHeaderObservation struct {
}

type InsertHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type MethodObservation struct {
}

type MethodParameters struct {
}

type NotStatementObservation struct {
}

type NotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []NotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type NotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementByteMatchStatementObservation struct {
}

type NotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type NotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type NotStatementStatementGeoMatchStatementObservation struct {
}

type NotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type NotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type NotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type NotStatementStatementIPSetReferenceStatementObservation struct {
}

type NotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type NotStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type NotStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type NotStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type NotStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type NotStatementStatementObservation struct {
}

type NotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []NotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []NotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []NotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type NotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementSizeConstraintStatementObservation struct {
}

type NotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type NotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementSqliMatchStatementObservation struct {
}

type NotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementXSSMatchStatementObservation struct {
}

type NotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementObservation struct {
}

type OrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementAndStatementObservation struct {
}

type OrStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementNotStatementObservation struct {
}

type OrStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementNotStatementStatementObservation struct {
}

type OrStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementObservation struct {
}

type OrStatementStatementOrStatementObservation struct {
}

type OrStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementOrStatementStatementObservation struct {
}

type OrStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type QueryStringObservation struct {
}

type QueryStringParameters struct {
}

type RegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []FieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []FieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []FieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []FieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []FieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []FieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []FieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RegexPatternSetReferenceStatementObservation struct {
}

type RegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ResponseHeaderObservation struct {
}

type ResponseHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type RuleGroupObservation struct {
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	LockToken *string `json:"lockToken,omitempty" tf:"lock_token,omitempty"`

	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`
}

type RuleGroupParameters struct {

	// +kubebuilder:validation:Required
	Capacity *int64 `json:"capacity" tf:"capacity,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// +kubebuilder:validation:Optional
	Rule []RuleParameters `json:"rule,omitempty" tf:"rule,omitempty"`

	// +kubebuilder:validation:Required
	Scope *string `json:"scope" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +kubebuilder:validation:Required
	VisibilityConfig []RuleGroupVisibilityConfigParameters `json:"visibilityConfig" tf:"visibility_config,omitempty"`
}

type RuleGroupVisibilityConfigObservation struct {
}

type RuleGroupVisibilityConfigParameters struct {

	// +kubebuilder:validation:Required
	CloudwatchMetricsEnabled *bool `json:"cloudwatchMetricsEnabled" tf:"cloudwatch_metrics_enabled,omitempty"`

	// +kubebuilder:validation:Required
	MetricName *string `json:"metricName" tf:"metric_name,omitempty"`

	// +kubebuilder:validation:Required
	SampledRequestsEnabled *bool `json:"sampledRequestsEnabled" tf:"sampled_requests_enabled,omitempty"`
}

type RuleObservation struct {
}

type RuleParameters struct {

	// +kubebuilder:validation:Required
	Action []ActionParameters `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Statement []StatementParameters `json:"statement" tf:"statement,omitempty"`

	// +kubebuilder:validation:Required
	VisibilityConfig []VisibilityConfigParameters `json:"visibilityConfig" tf:"visibility_config,omitempty"`
}

type RuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementByteMatchStatementFieldToMatchObservation struct {
}

type RuleStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementByteMatchStatementObservation struct {
}

type RuleStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementByteMatchStatementTextTransformationObservation struct {
}

type RuleStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RuleStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RuleStatementGeoMatchStatementObservation struct {
}

type RuleStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RuleStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RuleStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RuleStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RuleStatementIPSetReferenceStatementObservation struct {
}

type RuleStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RuleStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RuleStatementOrStatementObservation struct {
}

type RuleStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RuleStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementByteMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RuleStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RuleStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RuleStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RuleStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RuleStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RuleStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type RuleStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RuleStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RuleStatementOrStatementStatementObservation struct {
}

type RuleStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []OrStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RuleStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RuleStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RuleStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []OrStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []OrStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RuleStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RuleStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RuleStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RuleStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementRegexPatternSetReferenceStatementObservation struct {
}

type RuleStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RuleStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementSizeConstraintStatementObservation struct {
}

type RuleStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RuleStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RuleStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementSqliMatchStatementObservation struct {
}

type RuleStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementSqliMatchStatementTextTransformationObservation struct {
}

type RuleStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RuleStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementXSSMatchStatementObservation struct {
}

type RuleStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementXSSMatchStatementTextTransformationObservation struct {
}

type RuleStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type SingleHeaderObservation struct {
}

type SingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type SingleQueryArgumentObservation struct {
}

type SingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type SizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type SizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type SizeConstraintStatementFieldToMatchBodyObservation struct {
}

type SizeConstraintStatementFieldToMatchBodyParameters struct {
}

type SizeConstraintStatementFieldToMatchMethodObservation struct {
}

type SizeConstraintStatementFieldToMatchMethodParameters struct {
}

type SizeConstraintStatementFieldToMatchObservation struct {
}

type SizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []SizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []SizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []SizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []SizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []SizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []SizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []SizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type SizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type SizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type SizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type SizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type SizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type SizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type SizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type SizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type SizeConstraintStatementObservation struct {
}

type SizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []SizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []SizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type SizeConstraintStatementTextTransformationObservation struct {
}

type SizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type SqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type SqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type SqliMatchStatementFieldToMatchBodyObservation struct {
}

type SqliMatchStatementFieldToMatchBodyParameters struct {
}

type SqliMatchStatementFieldToMatchMethodObservation struct {
}

type SqliMatchStatementFieldToMatchMethodParameters struct {
}

type SqliMatchStatementFieldToMatchObservation struct {
}

type SqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []SqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []SqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []SqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []SqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []SqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []SqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []SqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type SqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type SqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type SqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type SqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type SqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type SqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type SqliMatchStatementFieldToMatchURIPathObservation struct {
}

type SqliMatchStatementFieldToMatchURIPathParameters struct {
}

type SqliMatchStatementObservation struct {
}

type SqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []SqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []SqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type SqliMatchStatementTextTransformationObservation struct {
}

type SqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementObservation struct {
}

type StatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []AndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementByteMatchStatementObservation struct {
}

type StatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementAndStatementStatementGeoMatchStatementObservation struct {
}

type StatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementAndStatementStatementObservation struct {
}

type StatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []StatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []StatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []StatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type StatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementSqliMatchStatementObservation struct {
}

type StatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementXSSMatchStatementObservation struct {
}

type StatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementByteMatchStatementObservation struct {
}

type StatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementByteMatchStatementTextTransformationObservation struct {
}

type StatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementGeoMatchStatementObservation struct {
}

type StatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []GeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementIPSetReferenceStatementObservation struct {
}

type StatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []IPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementNotStatementObservation struct {
}

type StatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementByteMatchStatementObservation struct {
}

type StatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementNotStatementStatementGeoMatchStatementObservation struct {
}

type StatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []NotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []NotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementNotStatementStatementObservation struct {
}

type StatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []NotStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []NotStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []NotStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []NotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []NotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []NotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []NotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type StatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementSqliMatchStatementObservation struct {
}

type StatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementXSSMatchStatementObservation struct {
}

type StatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementObservation struct {
}

type StatementOrStatementObservation struct {
}

type StatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementByteMatchStatementObservation struct {
}

type StatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementOrStatementStatementGeoMatchStatementObservation struct {
}

type StatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementOrStatementStatementObservation struct {
}

type StatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []StatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []StatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []StatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type StatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementSqliMatchStatementObservation struct {
}

type StatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementXSSMatchStatementObservation struct {
}

type StatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []GeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []IPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []SizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []SqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []XSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementSizeConstraintStatementObservation struct {
}

type StatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *int64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementSqliMatchStatementObservation struct {
}

type StatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementXSSMatchStatementObservation struct {
}

type StatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type TextTransformationObservation struct {
}

type TextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type URIPathObservation struct {
}

type URIPathParameters struct {
}

type VisibilityConfigObservation struct {
}

type VisibilityConfigParameters struct {

	// +kubebuilder:validation:Required
	CloudwatchMetricsEnabled *bool `json:"cloudwatchMetricsEnabled" tf:"cloudwatch_metrics_enabled,omitempty"`

	// +kubebuilder:validation:Required
	MetricName *string `json:"metricName" tf:"metric_name,omitempty"`

	// +kubebuilder:validation:Required
	SampledRequestsEnabled *bool `json:"sampledRequestsEnabled" tf:"sampled_requests_enabled,omitempty"`
}

type XSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type XSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type XSSMatchStatementFieldToMatchBodyObservation struct {
}

type XSSMatchStatementFieldToMatchBodyParameters struct {
}

type XSSMatchStatementFieldToMatchMethodObservation struct {
}

type XSSMatchStatementFieldToMatchMethodParameters struct {
}

type XSSMatchStatementFieldToMatchObservation struct {
}

type XSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []XSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []XSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []XSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []XSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []XSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []XSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []XSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type XSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type XSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type XSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type XSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type XSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type XSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type XSSMatchStatementFieldToMatchURIPathObservation struct {
}

type XSSMatchStatementFieldToMatchURIPathParameters struct {
}

type XSSMatchStatementObservation struct {
}

type XSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []XSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []XSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type XSSMatchStatementTextTransformationObservation struct {
}

type XSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

// RuleGroupSpec defines the desired state of RuleGroup
type RuleGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RuleGroupParameters `json:"forProvider"`
}

// RuleGroupStatus defines the observed state of RuleGroup.
type RuleGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RuleGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// RuleGroup is the Schema for the RuleGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type RuleGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RuleGroupSpec   `json:"spec"`
	Status            RuleGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RuleGroupList contains a list of RuleGroups
type RuleGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RuleGroup `json:"items"`
}

// Repository type metadata.
var (
	RuleGroupKind             = "RuleGroup"
	RuleGroupGroupKind        = schema.GroupKind{Group: Group, Kind: RuleGroupKind}.String()
	RuleGroupKindAPIVersion   = RuleGroupKind + "." + GroupVersion.String()
	RuleGroupGroupVersionKind = GroupVersion.WithKind(RuleGroupKind)
)

func init() {
	SchemeBuilder.Register(&RuleGroup{}, &RuleGroupList{})
}
