// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressObservation) DeepCopyInto(out *IngressObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressObservation.
func (in *IngressObservation) DeepCopy() *IngressObservation {
	if in == nil {
		return nil
	}
	out := new(IngressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressParameters) DeepCopyInto(out *IngressParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupOwnerID != nil {
		in, out := &in.SecurityGroupOwnerID, &out.SecurityGroupOwnerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressParameters.
func (in *IngressParameters) DeepCopy() *IngressParameters {
	if in == nil {
		return nil
	}
	out := new(IngressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingObservation) DeepCopyInto(out *LoggingObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingObservation.
func (in *LoggingObservation) DeepCopy() *LoggingObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingParameters) DeepCopyInto(out *LoggingParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingParameters.
func (in *LoggingParameters) DeepCopy() *LoggingParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterObservation) DeepCopyInto(out *ParameterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterObservation.
func (in *ParameterObservation) DeepCopy() *ParameterObservation {
	if in == nil {
		return nil
	}
	out := new(ParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterParameters) DeepCopyInto(out *ParameterParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterParameters.
func (in *ParameterParameters) DeepCopy() *ParameterParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftCluster) DeepCopyInto(out *RedshiftCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftCluster.
func (in *RedshiftCluster) DeepCopy() *RedshiftCluster {
	if in == nil {
		return nil
	}
	out := new(RedshiftCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftClusterList) DeepCopyInto(out *RedshiftClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RedshiftCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftClusterList.
func (in *RedshiftClusterList) DeepCopy() *RedshiftClusterList {
	if in == nil {
		return nil
	}
	out := new(RedshiftClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftClusterObservation) DeepCopyInto(out *RedshiftClusterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftClusterObservation.
func (in *RedshiftClusterObservation) DeepCopy() *RedshiftClusterObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftClusterParameters) DeepCopyInto(out *RedshiftClusterParameters) {
	*out = *in
	if in.AllowVersionUpgrade != nil {
		in, out := &in.AllowVersionUpgrade, &out.AllowVersionUpgrade
		*out = new(bool)
		**out = **in
	}
	if in.AutomatedSnapshotRetentionPeriod != nil {
		in, out := &in.AutomatedSnapshotRetentionPeriod, &out.AutomatedSnapshotRetentionPeriod
		*out = new(int64)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.ClusterParameterGroupName != nil {
		in, out := &in.ClusterParameterGroupName, &out.ClusterParameterGroupName
		*out = new(string)
		**out = **in
	}
	if in.ClusterPublicKey != nil {
		in, out := &in.ClusterPublicKey, &out.ClusterPublicKey
		*out = new(string)
		**out = **in
	}
	if in.ClusterRevisionNumber != nil {
		in, out := &in.ClusterRevisionNumber, &out.ClusterRevisionNumber
		*out = new(string)
		**out = **in
	}
	if in.ClusterSecurityGroups != nil {
		in, out := &in.ClusterSecurityGroups, &out.ClusterSecurityGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClusterSubnetGroupName != nil {
		in, out := &in.ClusterSubnetGroupName, &out.ClusterSubnetGroupName
		*out = new(string)
		**out = **in
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.ElasticIP != nil {
		in, out := &in.ElasticIP, &out.ElasticIP
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.EnhancedVPCRouting != nil {
		in, out := &in.EnhancedVPCRouting, &out.EnhancedVPCRouting
		*out = new(bool)
		**out = **in
	}
	if in.FinalSnapshotIdentifier != nil {
		in, out := &in.FinalSnapshotIdentifier, &out.FinalSnapshotIdentifier
		*out = new(string)
		**out = **in
	}
	if in.IamRoles != nil {
		in, out := &in.IamRoles, &out.IamRoles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = make([]LoggingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterPassword != nil {
		in, out := &in.MasterPassword, &out.MasterPassword
		*out = new(string)
		**out = **in
	}
	if in.MasterUsername != nil {
		in, out := &in.MasterUsername, &out.MasterUsername
		*out = new(string)
		**out = **in
	}
	if in.NumberOfNodes != nil {
		in, out := &in.NumberOfNodes, &out.NumberOfNodes
		*out = new(int64)
		**out = **in
	}
	if in.OwnerAccount != nil {
		in, out := &in.OwnerAccount, &out.OwnerAccount
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.PreferredMaintenanceWindow != nil {
		in, out := &in.PreferredMaintenanceWindow, &out.PreferredMaintenanceWindow
		*out = new(string)
		**out = **in
	}
	if in.PubliclyAccessible != nil {
		in, out := &in.PubliclyAccessible, &out.PubliclyAccessible
		*out = new(bool)
		**out = **in
	}
	if in.SkipFinalSnapshot != nil {
		in, out := &in.SkipFinalSnapshot, &out.SkipFinalSnapshot
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotClusterIdentifier != nil {
		in, out := &in.SnapshotClusterIdentifier, &out.SnapshotClusterIdentifier
		*out = new(string)
		**out = **in
	}
	if in.SnapshotCopy != nil {
		in, out := &in.SnapshotCopy, &out.SnapshotCopy
		*out = make([]SnapshotCopyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnapshotIdentifier != nil {
		in, out := &in.SnapshotIdentifier, &out.SnapshotIdentifier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftClusterParameters.
func (in *RedshiftClusterParameters) DeepCopy() *RedshiftClusterParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftClusterSpec) DeepCopyInto(out *RedshiftClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftClusterSpec.
func (in *RedshiftClusterSpec) DeepCopy() *RedshiftClusterSpec {
	if in == nil {
		return nil
	}
	out := new(RedshiftClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftClusterStatus) DeepCopyInto(out *RedshiftClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftClusterStatus.
func (in *RedshiftClusterStatus) DeepCopy() *RedshiftClusterStatus {
	if in == nil {
		return nil
	}
	out := new(RedshiftClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftEventSubscription) DeepCopyInto(out *RedshiftEventSubscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftEventSubscription.
func (in *RedshiftEventSubscription) DeepCopy() *RedshiftEventSubscription {
	if in == nil {
		return nil
	}
	out := new(RedshiftEventSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftEventSubscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftEventSubscriptionList) DeepCopyInto(out *RedshiftEventSubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RedshiftEventSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftEventSubscriptionList.
func (in *RedshiftEventSubscriptionList) DeepCopy() *RedshiftEventSubscriptionList {
	if in == nil {
		return nil
	}
	out := new(RedshiftEventSubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftEventSubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftEventSubscriptionObservation) DeepCopyInto(out *RedshiftEventSubscriptionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftEventSubscriptionObservation.
func (in *RedshiftEventSubscriptionObservation) DeepCopy() *RedshiftEventSubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftEventSubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftEventSubscriptionParameters) DeepCopyInto(out *RedshiftEventSubscriptionParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EventCategories != nil {
		in, out := &in.EventCategories, &out.EventCategories
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.SourceIds != nil {
		in, out := &in.SourceIds, &out.SourceIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftEventSubscriptionParameters.
func (in *RedshiftEventSubscriptionParameters) DeepCopy() *RedshiftEventSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftEventSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftEventSubscriptionSpec) DeepCopyInto(out *RedshiftEventSubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftEventSubscriptionSpec.
func (in *RedshiftEventSubscriptionSpec) DeepCopy() *RedshiftEventSubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(RedshiftEventSubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftEventSubscriptionStatus) DeepCopyInto(out *RedshiftEventSubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftEventSubscriptionStatus.
func (in *RedshiftEventSubscriptionStatus) DeepCopy() *RedshiftEventSubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(RedshiftEventSubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftParameterGroup) DeepCopyInto(out *RedshiftParameterGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftParameterGroup.
func (in *RedshiftParameterGroup) DeepCopy() *RedshiftParameterGroup {
	if in == nil {
		return nil
	}
	out := new(RedshiftParameterGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftParameterGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftParameterGroupList) DeepCopyInto(out *RedshiftParameterGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RedshiftParameterGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftParameterGroupList.
func (in *RedshiftParameterGroupList) DeepCopy() *RedshiftParameterGroupList {
	if in == nil {
		return nil
	}
	out := new(RedshiftParameterGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftParameterGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftParameterGroupObservation) DeepCopyInto(out *RedshiftParameterGroupObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftParameterGroupObservation.
func (in *RedshiftParameterGroupObservation) DeepCopy() *RedshiftParameterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftParameterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftParameterGroupParameters) DeepCopyInto(out *RedshiftParameterGroupParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]ParameterParameters, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftParameterGroupParameters.
func (in *RedshiftParameterGroupParameters) DeepCopy() *RedshiftParameterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftParameterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftParameterGroupSpec) DeepCopyInto(out *RedshiftParameterGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftParameterGroupSpec.
func (in *RedshiftParameterGroupSpec) DeepCopy() *RedshiftParameterGroupSpec {
	if in == nil {
		return nil
	}
	out := new(RedshiftParameterGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftParameterGroupStatus) DeepCopyInto(out *RedshiftParameterGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftParameterGroupStatus.
func (in *RedshiftParameterGroupStatus) DeepCopy() *RedshiftParameterGroupStatus {
	if in == nil {
		return nil
	}
	out := new(RedshiftParameterGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSecurityGroup) DeepCopyInto(out *RedshiftSecurityGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSecurityGroup.
func (in *RedshiftSecurityGroup) DeepCopy() *RedshiftSecurityGroup {
	if in == nil {
		return nil
	}
	out := new(RedshiftSecurityGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftSecurityGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSecurityGroupList) DeepCopyInto(out *RedshiftSecurityGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RedshiftSecurityGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSecurityGroupList.
func (in *RedshiftSecurityGroupList) DeepCopy() *RedshiftSecurityGroupList {
	if in == nil {
		return nil
	}
	out := new(RedshiftSecurityGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftSecurityGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSecurityGroupObservation) DeepCopyInto(out *RedshiftSecurityGroupObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSecurityGroupObservation.
func (in *RedshiftSecurityGroupObservation) DeepCopy() *RedshiftSecurityGroupObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftSecurityGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSecurityGroupParameters) DeepCopyInto(out *RedshiftSecurityGroupParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]IngressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSecurityGroupParameters.
func (in *RedshiftSecurityGroupParameters) DeepCopy() *RedshiftSecurityGroupParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftSecurityGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSecurityGroupSpec) DeepCopyInto(out *RedshiftSecurityGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSecurityGroupSpec.
func (in *RedshiftSecurityGroupSpec) DeepCopy() *RedshiftSecurityGroupSpec {
	if in == nil {
		return nil
	}
	out := new(RedshiftSecurityGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSecurityGroupStatus) DeepCopyInto(out *RedshiftSecurityGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSecurityGroupStatus.
func (in *RedshiftSecurityGroupStatus) DeepCopy() *RedshiftSecurityGroupStatus {
	if in == nil {
		return nil
	}
	out := new(RedshiftSecurityGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotCopyGrant) DeepCopyInto(out *RedshiftSnapshotCopyGrant) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotCopyGrant.
func (in *RedshiftSnapshotCopyGrant) DeepCopy() *RedshiftSnapshotCopyGrant {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotCopyGrant)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftSnapshotCopyGrant) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotCopyGrantList) DeepCopyInto(out *RedshiftSnapshotCopyGrantList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RedshiftSnapshotCopyGrant, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotCopyGrantList.
func (in *RedshiftSnapshotCopyGrantList) DeepCopy() *RedshiftSnapshotCopyGrantList {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotCopyGrantList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftSnapshotCopyGrantList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotCopyGrantObservation) DeepCopyInto(out *RedshiftSnapshotCopyGrantObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotCopyGrantObservation.
func (in *RedshiftSnapshotCopyGrantObservation) DeepCopy() *RedshiftSnapshotCopyGrantObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotCopyGrantObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotCopyGrantParameters) DeepCopyInto(out *RedshiftSnapshotCopyGrantParameters) {
	*out = *in
	if in.KmsKeyID != nil {
		in, out := &in.KmsKeyID, &out.KmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotCopyGrantParameters.
func (in *RedshiftSnapshotCopyGrantParameters) DeepCopy() *RedshiftSnapshotCopyGrantParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotCopyGrantParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotCopyGrantSpec) DeepCopyInto(out *RedshiftSnapshotCopyGrantSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotCopyGrantSpec.
func (in *RedshiftSnapshotCopyGrantSpec) DeepCopy() *RedshiftSnapshotCopyGrantSpec {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotCopyGrantSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotCopyGrantStatus) DeepCopyInto(out *RedshiftSnapshotCopyGrantStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotCopyGrantStatus.
func (in *RedshiftSnapshotCopyGrantStatus) DeepCopy() *RedshiftSnapshotCopyGrantStatus {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotCopyGrantStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotSchedule) DeepCopyInto(out *RedshiftSnapshotSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotSchedule.
func (in *RedshiftSnapshotSchedule) DeepCopy() *RedshiftSnapshotSchedule {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftSnapshotSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotScheduleAssociation) DeepCopyInto(out *RedshiftSnapshotScheduleAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotScheduleAssociation.
func (in *RedshiftSnapshotScheduleAssociation) DeepCopy() *RedshiftSnapshotScheduleAssociation {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotScheduleAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftSnapshotScheduleAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotScheduleAssociationList) DeepCopyInto(out *RedshiftSnapshotScheduleAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RedshiftSnapshotScheduleAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotScheduleAssociationList.
func (in *RedshiftSnapshotScheduleAssociationList) DeepCopy() *RedshiftSnapshotScheduleAssociationList {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotScheduleAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftSnapshotScheduleAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotScheduleAssociationObservation) DeepCopyInto(out *RedshiftSnapshotScheduleAssociationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotScheduleAssociationObservation.
func (in *RedshiftSnapshotScheduleAssociationObservation) DeepCopy() *RedshiftSnapshotScheduleAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotScheduleAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotScheduleAssociationParameters) DeepCopyInto(out *RedshiftSnapshotScheduleAssociationParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotScheduleAssociationParameters.
func (in *RedshiftSnapshotScheduleAssociationParameters) DeepCopy() *RedshiftSnapshotScheduleAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotScheduleAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotScheduleAssociationSpec) DeepCopyInto(out *RedshiftSnapshotScheduleAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	out.ForProvider = in.ForProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotScheduleAssociationSpec.
func (in *RedshiftSnapshotScheduleAssociationSpec) DeepCopy() *RedshiftSnapshotScheduleAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotScheduleAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotScheduleAssociationStatus) DeepCopyInto(out *RedshiftSnapshotScheduleAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotScheduleAssociationStatus.
func (in *RedshiftSnapshotScheduleAssociationStatus) DeepCopy() *RedshiftSnapshotScheduleAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotScheduleAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotScheduleList) DeepCopyInto(out *RedshiftSnapshotScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RedshiftSnapshotSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotScheduleList.
func (in *RedshiftSnapshotScheduleList) DeepCopy() *RedshiftSnapshotScheduleList {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftSnapshotScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotScheduleObservation) DeepCopyInto(out *RedshiftSnapshotScheduleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotScheduleObservation.
func (in *RedshiftSnapshotScheduleObservation) DeepCopy() *RedshiftSnapshotScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotScheduleParameters) DeepCopyInto(out *RedshiftSnapshotScheduleParameters) {
	*out = *in
	if in.Definitions != nil {
		in, out := &in.Definitions, &out.Definitions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.IdentifierPrefix != nil {
		in, out := &in.IdentifierPrefix, &out.IdentifierPrefix
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotScheduleParameters.
func (in *RedshiftSnapshotScheduleParameters) DeepCopy() *RedshiftSnapshotScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotScheduleSpec) DeepCopyInto(out *RedshiftSnapshotScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotScheduleSpec.
func (in *RedshiftSnapshotScheduleSpec) DeepCopy() *RedshiftSnapshotScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSnapshotScheduleStatus) DeepCopyInto(out *RedshiftSnapshotScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSnapshotScheduleStatus.
func (in *RedshiftSnapshotScheduleStatus) DeepCopy() *RedshiftSnapshotScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(RedshiftSnapshotScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSubnetGroup) DeepCopyInto(out *RedshiftSubnetGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSubnetGroup.
func (in *RedshiftSubnetGroup) DeepCopy() *RedshiftSubnetGroup {
	if in == nil {
		return nil
	}
	out := new(RedshiftSubnetGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftSubnetGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSubnetGroupList) DeepCopyInto(out *RedshiftSubnetGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RedshiftSubnetGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSubnetGroupList.
func (in *RedshiftSubnetGroupList) DeepCopy() *RedshiftSubnetGroupList {
	if in == nil {
		return nil
	}
	out := new(RedshiftSubnetGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedshiftSubnetGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSubnetGroupObservation) DeepCopyInto(out *RedshiftSubnetGroupObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSubnetGroupObservation.
func (in *RedshiftSubnetGroupObservation) DeepCopy() *RedshiftSubnetGroupObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftSubnetGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSubnetGroupParameters) DeepCopyInto(out *RedshiftSubnetGroupParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSubnetGroupParameters.
func (in *RedshiftSubnetGroupParameters) DeepCopy() *RedshiftSubnetGroupParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftSubnetGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSubnetGroupSpec) DeepCopyInto(out *RedshiftSubnetGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSubnetGroupSpec.
func (in *RedshiftSubnetGroupSpec) DeepCopy() *RedshiftSubnetGroupSpec {
	if in == nil {
		return nil
	}
	out := new(RedshiftSubnetGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftSubnetGroupStatus) DeepCopyInto(out *RedshiftSubnetGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftSubnetGroupStatus.
func (in *RedshiftSubnetGroupStatus) DeepCopy() *RedshiftSubnetGroupStatus {
	if in == nil {
		return nil
	}
	out := new(RedshiftSubnetGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotCopyObservation) DeepCopyInto(out *SnapshotCopyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotCopyObservation.
func (in *SnapshotCopyObservation) DeepCopy() *SnapshotCopyObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotCopyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotCopyParameters) DeepCopyInto(out *SnapshotCopyParameters) {
	*out = *in
	if in.GrantName != nil {
		in, out := &in.GrantName, &out.GrantName
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriod != nil {
		in, out := &in.RetentionPeriod, &out.RetentionPeriod
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotCopyParameters.
func (in *SnapshotCopyParameters) DeepCopy() *SnapshotCopyParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotCopyParameters)
	in.DeepCopyInto(out)
	return out
}
