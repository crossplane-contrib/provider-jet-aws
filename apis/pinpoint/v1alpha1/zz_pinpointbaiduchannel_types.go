/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type PinpointBaiduChannelObservation struct {
}

type PinpointBaiduChannelParameters struct {
	APIKey string `json:"apiKey" tf:"api_key"`

	ApplicationID string `json:"applicationID" tf:"application_id"`

	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`

	SecretKey string `json:"secretKey" tf:"secret_key"`
}

// PinpointBaiduChannelSpec defines the desired state of PinpointBaiduChannel
type PinpointBaiduChannelSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       PinpointBaiduChannelParameters `json:"forProvider"`
}

// PinpointBaiduChannelStatus defines the observed state of PinpointBaiduChannel.
type PinpointBaiduChannelStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          PinpointBaiduChannelObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PinpointBaiduChannel is the Schema for the PinpointBaiduChannels API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type PinpointBaiduChannel struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PinpointBaiduChannelSpec   `json:"spec"`
	Status            PinpointBaiduChannelStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PinpointBaiduChannelList contains a list of PinpointBaiduChannels
type PinpointBaiduChannelList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PinpointBaiduChannel `json:"items"`
}

// Repository type metadata.
var (
	PinpointBaiduChannelKind             = "PinpointBaiduChannel"
	PinpointBaiduChannelGroupKind        = schema.GroupKind{Group: Group, Kind: PinpointBaiduChannelKind}.String()
	PinpointBaiduChannelKindAPIVersion   = PinpointBaiduChannelKind + "." + GroupVersion.String()
	PinpointBaiduChannelGroupVersionKind = GroupVersion.WithKind(PinpointBaiduChannelKind)
)

func init() {
	SchemeBuilder.Register(&PinpointBaiduChannel{}, &PinpointBaiduChannelList{})
}
