/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=pinpoint.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/pinpoint/v1alpha1"
)

type PinpointApnsVoipChannelObservation struct {
}

type PinpointApnsVoipChannelParameters struct {
	ApplicationId string `json:"applicationId" tf:"application_id"`

	BundleId *string `json:"bundleId,omitempty" tf:"bundle_id"`

	Certificate *string `json:"certificate,omitempty" tf:"certificate"`

	DefaultAuthenticationMethod *string `json:"defaultAuthenticationMethod,omitempty" tf:"default_authentication_method"`

	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`

	PrivateKey *string `json:"privateKey,omitempty" tf:"private_key"`

	TeamId *string `json:"teamId,omitempty" tf:"team_id"`

	TokenKey *string `json:"tokenKey,omitempty" tf:"token_key"`

	TokenKeyId *string `json:"tokenKeyId,omitempty" tf:"token_key_id"`
}

// PinpointApnsVoipChannelSpec defines the desired state of PinpointApnsVoipChannel
type PinpointApnsVoipChannelSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       PinpointApnsVoipChannelParameters `json:"forProvider"`
}

// PinpointApnsVoipChannelStatus defines the observed state of PinpointApnsVoipChannel.
type PinpointApnsVoipChannelStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          PinpointApnsVoipChannelObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PinpointApnsVoipChannel is the Schema for the PinpointApnsVoipChannels API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type PinpointApnsVoipChannel struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PinpointApnsVoipChannelSpec   `json:"spec"`
	Status            PinpointApnsVoipChannelStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PinpointApnsVoipChannelList contains a list of PinpointApnsVoipChannels
type PinpointApnsVoipChannelList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PinpointApnsVoipChannel `json:"items"`
}

// Repository type metadata.
var (
	PinpointApnsVoipChannelKind             = "PinpointApnsVoipChannel"
	PinpointApnsVoipChannelGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: PinpointApnsVoipChannelKind}.String()
	PinpointApnsVoipChannelKindAPIVersion   = PinpointApnsVoipChannelKind + "." + v1alpha1.GroupVersion.String()
	PinpointApnsVoipChannelGroupVersionKind = v1alpha1.GroupVersion.WithKind(PinpointApnsVoipChannelKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&PinpointApnsVoipChannel{}, &PinpointApnsVoipChannelList{})
}
