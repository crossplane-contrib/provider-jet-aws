/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BucketOwnershipControlsObservation struct {
}

type BucketOwnershipControlsParameters struct {

	// +kubebuilder:validation:Required
	Bucket *string `json:"bucket" tf:"bucket,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// +kubebuilder:validation:Required
	Rule []BucketOwnershipControlsRuleParameters `json:"rule" tf:"rule,omitempty"`
}

type BucketOwnershipControlsRuleObservation struct {
}

type BucketOwnershipControlsRuleParameters struct {

	// +kubebuilder:validation:Required
	ObjectOwnership *string `json:"objectOwnership" tf:"object_ownership,omitempty"`
}

// BucketOwnershipControlsSpec defines the desired state of BucketOwnershipControls
type BucketOwnershipControlsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BucketOwnershipControlsParameters `json:"forProvider"`
}

// BucketOwnershipControlsStatus defines the observed state of BucketOwnershipControls.
type BucketOwnershipControlsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BucketOwnershipControlsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// BucketOwnershipControls is the Schema for the BucketOwnershipControlss API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type BucketOwnershipControls struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BucketOwnershipControlsSpec   `json:"spec"`
	Status            BucketOwnershipControlsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BucketOwnershipControlsList contains a list of BucketOwnershipControlss
type BucketOwnershipControlsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BucketOwnershipControls `json:"items"`
}

// Repository type metadata.
var (
	BucketOwnershipControlsKind             = "BucketOwnershipControls"
	BucketOwnershipControlsGroupKind        = schema.GroupKind{Group: Group, Kind: BucketOwnershipControlsKind}.String()
	BucketOwnershipControlsKindAPIVersion   = BucketOwnershipControlsKind + "." + GroupVersion.String()
	BucketOwnershipControlsGroupVersionKind = GroupVersion.WithKind(BucketOwnershipControlsKind)
)

func init() {
	SchemeBuilder.Register(&BucketOwnershipControls{}, &BucketOwnershipControlsList{})
}
