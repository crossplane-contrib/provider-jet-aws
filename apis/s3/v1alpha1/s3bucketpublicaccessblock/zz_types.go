/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=s3.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/s3/v1alpha1"
)

type S3BucketPublicAccessBlockObservation struct {
}

type S3BucketPublicAccessBlockParameters struct {
	BlockPublicAcls *bool `json:"blockPublicAcls,omitempty" tf:"block_public_acls"`

	BlockPublicPolicy *bool `json:"blockPublicPolicy,omitempty" tf:"block_public_policy"`

	Bucket string `json:"bucket" tf:"bucket"`

	IgnorePublicAcls *bool `json:"ignorePublicAcls,omitempty" tf:"ignore_public_acls"`

	RestrictPublicBuckets *bool `json:"restrictPublicBuckets,omitempty" tf:"restrict_public_buckets"`
}

// S3BucketPublicAccessBlockSpec defines the desired state of S3BucketPublicAccessBlock
type S3BucketPublicAccessBlockSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       S3BucketPublicAccessBlockParameters `json:"forProvider"`
}

// S3BucketPublicAccessBlockStatus defines the observed state of S3BucketPublicAccessBlock.
type S3BucketPublicAccessBlockStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          S3BucketPublicAccessBlockObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// S3BucketPublicAccessBlock is the Schema for the S3BucketPublicAccessBlocks API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type S3BucketPublicAccessBlock struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              S3BucketPublicAccessBlockSpec   `json:"spec"`
	Status            S3BucketPublicAccessBlockStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// S3BucketPublicAccessBlockList contains a list of S3BucketPublicAccessBlocks
type S3BucketPublicAccessBlockList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []S3BucketPublicAccessBlock `json:"items"`
}

// Repository type metadata.
var (
	S3BucketPublicAccessBlockKind             = "S3BucketPublicAccessBlock"
	S3BucketPublicAccessBlockGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: S3BucketPublicAccessBlockKind}.String()
	S3BucketPublicAccessBlockKindAPIVersion   = S3BucketPublicAccessBlockKind + "." + v1alpha1.GroupVersion.String()
	S3BucketPublicAccessBlockGroupVersionKind = v1alpha1.GroupVersion.WithKind(S3BucketPublicAccessBlockKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&S3BucketPublicAccessBlock{}, &S3BucketPublicAccessBlockList{})
}
