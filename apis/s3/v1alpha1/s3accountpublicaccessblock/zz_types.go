/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=s3.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/s3/v1alpha1"
)

type S3AccountPublicAccessBlockObservation struct {
}

type S3AccountPublicAccessBlockParameters struct {
	AccountId *string `json:"accountId,omitempty" tf:"account_id"`

	BlockPublicAcls *bool `json:"blockPublicAcls,omitempty" tf:"block_public_acls"`

	BlockPublicPolicy *bool `json:"blockPublicPolicy,omitempty" tf:"block_public_policy"`

	IgnorePublicAcls *bool `json:"ignorePublicAcls,omitempty" tf:"ignore_public_acls"`

	RestrictPublicBuckets *bool `json:"restrictPublicBuckets,omitempty" tf:"restrict_public_buckets"`
}

// S3AccountPublicAccessBlockSpec defines the desired state of S3AccountPublicAccessBlock
type S3AccountPublicAccessBlockSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       S3AccountPublicAccessBlockParameters `json:"forProvider"`
}

// S3AccountPublicAccessBlockStatus defines the observed state of S3AccountPublicAccessBlock.
type S3AccountPublicAccessBlockStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          S3AccountPublicAccessBlockObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// S3AccountPublicAccessBlock is the Schema for the S3AccountPublicAccessBlocks API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type S3AccountPublicAccessBlock struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              S3AccountPublicAccessBlockSpec   `json:"spec"`
	Status            S3AccountPublicAccessBlockStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// S3AccountPublicAccessBlockList contains a list of S3AccountPublicAccessBlocks
type S3AccountPublicAccessBlockList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []S3AccountPublicAccessBlock `json:"items"`
}

// Repository type metadata.
var (
	S3AccountPublicAccessBlockKind             = "S3AccountPublicAccessBlock"
	S3AccountPublicAccessBlockGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: S3AccountPublicAccessBlockKind}.String()
	S3AccountPublicAccessBlockKindAPIVersion   = S3AccountPublicAccessBlockKind + "." + v1alpha1.GroupVersion.String()
	S3AccountPublicAccessBlockGroupVersionKind = v1alpha1.GroupVersion.WithKind(S3AccountPublicAccessBlockKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&S3AccountPublicAccessBlock{}, &S3AccountPublicAccessBlockList{})
}
