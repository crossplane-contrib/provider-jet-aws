/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=secretsmanager.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/secretsmanager/v1alpha1"
)

type SecretsmanagerSecretVersionObservation struct {
	Arn string `json:"arn" tf:"arn"`

	VersionId string `json:"versionId" tf:"version_id"`
}

type SecretsmanagerSecretVersionParameters struct {
	SecretBinary *string `json:"secretBinary,omitempty" tf:"secret_binary"`

	SecretId string `json:"secretId" tf:"secret_id"`

	SecretString *string `json:"secretString,omitempty" tf:"secret_string"`

	VersionStages []string `json:"versionStages,omitempty" tf:"version_stages"`
}

// SecretsmanagerSecretVersionSpec defines the desired state of SecretsmanagerSecretVersion
type SecretsmanagerSecretVersionSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       SecretsmanagerSecretVersionParameters `json:"forProvider"`
}

// SecretsmanagerSecretVersionStatus defines the observed state of SecretsmanagerSecretVersion.
type SecretsmanagerSecretVersionStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          SecretsmanagerSecretVersionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SecretsmanagerSecretVersion is the Schema for the SecretsmanagerSecretVersions API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type SecretsmanagerSecretVersion struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SecretsmanagerSecretVersionSpec   `json:"spec"`
	Status            SecretsmanagerSecretVersionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SecretsmanagerSecretVersionList contains a list of SecretsmanagerSecretVersions
type SecretsmanagerSecretVersionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SecretsmanagerSecretVersion `json:"items"`
}

// Repository type metadata.
var (
	SecretsmanagerSecretVersionKind             = "SecretsmanagerSecretVersion"
	SecretsmanagerSecretVersionGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: SecretsmanagerSecretVersionKind}.String()
	SecretsmanagerSecretVersionKindAPIVersion   = SecretsmanagerSecretVersionKind + "." + v1alpha1.GroupVersion.String()
	SecretsmanagerSecretVersionGroupVersionKind = v1alpha1.GroupVersion.WithKind(SecretsmanagerSecretVersionKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&SecretsmanagerSecretVersion{}, &SecretsmanagerSecretVersionList{})
}
