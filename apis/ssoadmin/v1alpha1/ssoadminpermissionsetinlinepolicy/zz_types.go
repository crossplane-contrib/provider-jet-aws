/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=ssoadmin.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/ssoadmin/v1alpha1"
)

type SsoadminPermissionSetInlinePolicyObservation struct {
}

type SsoadminPermissionSetInlinePolicyParameters struct {
	InlinePolicy string `json:"inlinePolicy" tf:"inline_policy"`

	InstanceArn string `json:"instanceArn" tf:"instance_arn"`

	PermissionSetArn string `json:"permissionSetArn" tf:"permission_set_arn"`
}

// SsoadminPermissionSetInlinePolicySpec defines the desired state of SsoadminPermissionSetInlinePolicy
type SsoadminPermissionSetInlinePolicySpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       SsoadminPermissionSetInlinePolicyParameters `json:"forProvider"`
}

// SsoadminPermissionSetInlinePolicyStatus defines the observed state of SsoadminPermissionSetInlinePolicy.
type SsoadminPermissionSetInlinePolicyStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          SsoadminPermissionSetInlinePolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SsoadminPermissionSetInlinePolicy is the Schema for the SsoadminPermissionSetInlinePolicys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type SsoadminPermissionSetInlinePolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SsoadminPermissionSetInlinePolicySpec   `json:"spec"`
	Status            SsoadminPermissionSetInlinePolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SsoadminPermissionSetInlinePolicyList contains a list of SsoadminPermissionSetInlinePolicys
type SsoadminPermissionSetInlinePolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SsoadminPermissionSetInlinePolicy `json:"items"`
}

// Repository type metadata.
var (
	SsoadminPermissionSetInlinePolicyKind             = "SsoadminPermissionSetInlinePolicy"
	SsoadminPermissionSetInlinePolicyGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: SsoadminPermissionSetInlinePolicyKind}.String()
	SsoadminPermissionSetInlinePolicyKindAPIVersion   = SsoadminPermissionSetInlinePolicyKind + "." + v1alpha1.GroupVersion.String()
	SsoadminPermissionSetInlinePolicyGroupVersionKind = v1alpha1.GroupVersion.WithKind(SsoadminPermissionSetInlinePolicyKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&SsoadminPermissionSetInlinePolicy{}, &SsoadminPermissionSetInlinePolicyList{})
}
