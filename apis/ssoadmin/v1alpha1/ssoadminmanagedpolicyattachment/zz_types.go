/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=ssoadmin.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/ssoadmin/v1alpha1"
)

type SsoadminManagedPolicyAttachmentObservation struct {
	ManagedPolicyName string `json:"managedPolicyName" tf:"managed_policy_name"`
}

type SsoadminManagedPolicyAttachmentParameters struct {
	InstanceArn string `json:"instanceArn" tf:"instance_arn"`

	ManagedPolicyArn string `json:"managedPolicyArn" tf:"managed_policy_arn"`

	PermissionSetArn string `json:"permissionSetArn" tf:"permission_set_arn"`
}

// SsoadminManagedPolicyAttachmentSpec defines the desired state of SsoadminManagedPolicyAttachment
type SsoadminManagedPolicyAttachmentSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       SsoadminManagedPolicyAttachmentParameters `json:"forProvider"`
}

// SsoadminManagedPolicyAttachmentStatus defines the observed state of SsoadminManagedPolicyAttachment.
type SsoadminManagedPolicyAttachmentStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          SsoadminManagedPolicyAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SsoadminManagedPolicyAttachment is the Schema for the SsoadminManagedPolicyAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type SsoadminManagedPolicyAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SsoadminManagedPolicyAttachmentSpec   `json:"spec"`
	Status            SsoadminManagedPolicyAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SsoadminManagedPolicyAttachmentList contains a list of SsoadminManagedPolicyAttachments
type SsoadminManagedPolicyAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SsoadminManagedPolicyAttachment `json:"items"`
}

// Repository type metadata.
var (
	SsoadminManagedPolicyAttachmentKind             = "SsoadminManagedPolicyAttachment"
	SsoadminManagedPolicyAttachmentGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: SsoadminManagedPolicyAttachmentKind}.String()
	SsoadminManagedPolicyAttachmentKindAPIVersion   = SsoadminManagedPolicyAttachmentKind + "." + v1alpha1.GroupVersion.String()
	SsoadminManagedPolicyAttachmentGroupVersionKind = v1alpha1.GroupVersion.WithKind(SsoadminManagedPolicyAttachmentKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&SsoadminManagedPolicyAttachment{}, &SsoadminManagedPolicyAttachmentList{})
}
