/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=spot.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/spot/v1alpha1"
)

type SpotDatafeedSubscriptionObservation struct {
}

type SpotDatafeedSubscriptionParameters struct {
	Bucket string `json:"bucket" tf:"bucket"`

	Prefix *string `json:"prefix,omitempty" tf:"prefix"`
}

// SpotDatafeedSubscriptionSpec defines the desired state of SpotDatafeedSubscription
type SpotDatafeedSubscriptionSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       SpotDatafeedSubscriptionParameters `json:"forProvider"`
}

// SpotDatafeedSubscriptionStatus defines the observed state of SpotDatafeedSubscription.
type SpotDatafeedSubscriptionStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          SpotDatafeedSubscriptionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SpotDatafeedSubscription is the Schema for the SpotDatafeedSubscriptions API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type SpotDatafeedSubscription struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SpotDatafeedSubscriptionSpec   `json:"spec"`
	Status            SpotDatafeedSubscriptionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SpotDatafeedSubscriptionList contains a list of SpotDatafeedSubscriptions
type SpotDatafeedSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SpotDatafeedSubscription `json:"items"`
}

// Repository type metadata.
var (
	SpotDatafeedSubscriptionKind             = "SpotDatafeedSubscription"
	SpotDatafeedSubscriptionGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: SpotDatafeedSubscriptionKind}.String()
	SpotDatafeedSubscriptionKindAPIVersion   = SpotDatafeedSubscriptionKind + "." + v1alpha1.GroupVersion.String()
	SpotDatafeedSubscriptionGroupVersionKind = v1alpha1.GroupVersion.WithKind(SpotDatafeedSubscriptionKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&SpotDatafeedSubscription{}, &SpotDatafeedSubscriptionList{})
}
