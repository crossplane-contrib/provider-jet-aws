/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

// +kubebuilder:object:generate=true
// +groupName=servicecatalog.aws.tf.crossplane.io
// +versionName=v1alpha1

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1alpha1 "github.com/crossplane-contrib/provider-tf-aws/apis/servicecatalog/v1alpha1"
)

type ServicecatalogConstraintObservation struct {
	Owner string `json:"owner" tf:"owner"`

	Status string `json:"status" tf:"status"`
}

type ServicecatalogConstraintParameters struct {
	AcceptLanguage *string `json:"acceptLanguage,omitempty" tf:"accept_language"`

	Description *string `json:"description,omitempty" tf:"description"`

	Parameters string `json:"parameters" tf:"parameters"`

	PortfolioId string `json:"portfolioId" tf:"portfolio_id"`

	ProductId string `json:"productId" tf:"product_id"`

	Type string `json:"type" tf:"type"`
}

// ServicecatalogConstraintSpec defines the desired state of ServicecatalogConstraint
type ServicecatalogConstraintSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ServicecatalogConstraintParameters `json:"forProvider"`
}

// ServicecatalogConstraintStatus defines the observed state of ServicecatalogConstraint.
type ServicecatalogConstraintStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ServicecatalogConstraintObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ServicecatalogConstraint is the Schema for the ServicecatalogConstraints API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type ServicecatalogConstraint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServicecatalogConstraintSpec   `json:"spec"`
	Status            ServicecatalogConstraintStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServicecatalogConstraintList contains a list of ServicecatalogConstraints
type ServicecatalogConstraintList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServicecatalogConstraint `json:"items"`
}

// Repository type metadata.
var (
	ServicecatalogConstraintKind             = "ServicecatalogConstraint"
	ServicecatalogConstraintGroupKind        = schema.GroupKind{Group: v1alpha1.Group, Kind: ServicecatalogConstraintKind}.String()
	ServicecatalogConstraintKindAPIVersion   = ServicecatalogConstraintKind + "." + v1alpha1.GroupVersion.String()
	ServicecatalogConstraintGroupVersionKind = v1alpha1.GroupVersion.WithKind(ServicecatalogConstraintKind)
)

func init() {
	v1alpha1.SchemeBuilder.Register(&ServicecatalogConstraint{}, &ServicecatalogConstraintList{})
}
