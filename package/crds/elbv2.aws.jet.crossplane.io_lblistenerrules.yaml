---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: lblistenerrules.elbv2.aws.jet.crossplane.io
spec:
  group: elbv2.aws.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - awsjet
    kind: LBListenerRule
    listKind: LBListenerRuleList
    plural: lblistenerrules
    singular: lblistenerrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: LBListenerRule is the Schema for the LBListenerRules API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LBListenerRuleSpec defines the desired state of LBListenerRule
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  action:
                    items:
                      properties:
                        authenticateCognito:
                          items:
                            properties:
                              authenticationRequestExtraParams:
                                additionalProperties:
                                  type: string
                                type: object
                              onUnauthenticatedRequest:
                                type: string
                              scope:
                                type: string
                              sessionCookieName:
                                type: string
                              sessionTimeout:
                                type: number
                              userPoolArn:
                                type: string
                              userPoolClientId:
                                type: string
                              userPoolDomain:
                                type: string
                            required:
                            - userPoolArn
                            - userPoolClientId
                            - userPoolDomain
                            type: object
                          type: array
                        authenticateOidc:
                          items:
                            properties:
                              authenticationRequestExtraParams:
                                additionalProperties:
                                  type: string
                                type: object
                              authorizationEndpoint:
                                type: string
                              clientId:
                                type: string
                              clientSecretSecretRef:
                                description: A SecretKeySelector is a reference to
                                  a secret key in an arbitrary namespace.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              issuer:
                                type: string
                              onUnauthenticatedRequest:
                                type: string
                              scope:
                                type: string
                              sessionCookieName:
                                type: string
                              sessionTimeout:
                                type: number
                              tokenEndpoint:
                                type: string
                              userInfoEndpoint:
                                type: string
                            required:
                            - authorizationEndpoint
                            - clientId
                            - clientSecretSecretRef
                            - issuer
                            - tokenEndpoint
                            - userInfoEndpoint
                            type: object
                          type: array
                        fixedResponse:
                          items:
                            properties:
                              contentType:
                                type: string
                              messageBody:
                                type: string
                              statusCode:
                                type: string
                            required:
                            - contentType
                            type: object
                          type: array
                        forward:
                          items:
                            properties:
                              stickiness:
                                items:
                                  properties:
                                    duration:
                                      type: number
                                    enabled:
                                      type: boolean
                                  required:
                                  - duration
                                  type: object
                                type: array
                              targetGroup:
                                items:
                                  properties:
                                    arn:
                                      type: string
                                    weight:
                                      type: number
                                  required:
                                  - arn
                                  type: object
                                type: array
                            required:
                            - targetGroup
                            type: object
                          type: array
                        order:
                          type: number
                        redirect:
                          items:
                            properties:
                              host:
                                type: string
                              path:
                                type: string
                              port:
                                type: string
                              protocol:
                                type: string
                              query:
                                type: string
                              statusCode:
                                type: string
                            required:
                            - statusCode
                            type: object
                          type: array
                        targetGroupArn:
                          type: string
                        targetGroupArnRef:
                          description: A Reference to a named object.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                          required:
                          - name
                          type: object
                        targetGroupArnSelector:
                          description: A Selector selects an object.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                          type: object
                        type:
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  condition:
                    items:
                      properties:
                        hostHeader:
                          items:
                            properties:
                              values:
                                items:
                                  type: string
                                type: array
                            required:
                            - values
                            type: object
                          type: array
                        httpHeader:
                          items:
                            properties:
                              httpHeaderName:
                                type: string
                              values:
                                items:
                                  type: string
                                type: array
                            required:
                            - httpHeaderName
                            - values
                            type: object
                          type: array
                        httpRequestMethod:
                          items:
                            properties:
                              values:
                                items:
                                  type: string
                                type: array
                            required:
                            - values
                            type: object
                          type: array
                        pathPattern:
                          items:
                            properties:
                              values:
                                items:
                                  type: string
                                type: array
                            required:
                            - values
                            type: object
                          type: array
                        queryString:
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            required:
                            - value
                            type: object
                          type: array
                        sourceIp:
                          items:
                            properties:
                              values:
                                items:
                                  type: string
                                type: array
                            required:
                            - values
                            type: object
                          type: array
                      type: object
                    type: array
                  listenerArn:
                    type: string
                  listenerArnRef:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  listenerArnSelector:
                    description: A Selector selects an object.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  priority:
                    type: number
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - action
                - condition
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: LBListenerRuleStatus defines the observed state of LBListenerRule.
            properties:
              atProvider:
                properties:
                  arn:
                    type: string
                  id:
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
